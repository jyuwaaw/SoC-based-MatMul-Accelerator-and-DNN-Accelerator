// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matmul_plain_matmul_plain,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=4167,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=0,HLS_SYN_FF=6376,HLS_SYN_LUT=5052,HLS_VERSION=2023_2}" *)

module matmul_plain (
        ap_clk,
        ap_rst_n,
        m_axi_data0_AWVALID,
        m_axi_data0_AWREADY,
        m_axi_data0_AWADDR,
        m_axi_data0_AWID,
        m_axi_data0_AWLEN,
        m_axi_data0_AWSIZE,
        m_axi_data0_AWBURST,
        m_axi_data0_AWLOCK,
        m_axi_data0_AWCACHE,
        m_axi_data0_AWPROT,
        m_axi_data0_AWQOS,
        m_axi_data0_AWREGION,
        m_axi_data0_AWUSER,
        m_axi_data0_WVALID,
        m_axi_data0_WREADY,
        m_axi_data0_WDATA,
        m_axi_data0_WSTRB,
        m_axi_data0_WLAST,
        m_axi_data0_WID,
        m_axi_data0_WUSER,
        m_axi_data0_ARVALID,
        m_axi_data0_ARREADY,
        m_axi_data0_ARADDR,
        m_axi_data0_ARID,
        m_axi_data0_ARLEN,
        m_axi_data0_ARSIZE,
        m_axi_data0_ARBURST,
        m_axi_data0_ARLOCK,
        m_axi_data0_ARCACHE,
        m_axi_data0_ARPROT,
        m_axi_data0_ARQOS,
        m_axi_data0_ARREGION,
        m_axi_data0_ARUSER,
        m_axi_data0_RVALID,
        m_axi_data0_RREADY,
        m_axi_data0_RDATA,
        m_axi_data0_RLAST,
        m_axi_data0_RID,
        m_axi_data0_RUSER,
        m_axi_data0_RRESP,
        m_axi_data0_BVALID,
        m_axi_data0_BREADY,
        m_axi_data0_BRESP,
        m_axi_data0_BID,
        m_axi_data0_BUSER,
        m_axi_data1_AWVALID,
        m_axi_data1_AWREADY,
        m_axi_data1_AWADDR,
        m_axi_data1_AWID,
        m_axi_data1_AWLEN,
        m_axi_data1_AWSIZE,
        m_axi_data1_AWBURST,
        m_axi_data1_AWLOCK,
        m_axi_data1_AWCACHE,
        m_axi_data1_AWPROT,
        m_axi_data1_AWQOS,
        m_axi_data1_AWREGION,
        m_axi_data1_AWUSER,
        m_axi_data1_WVALID,
        m_axi_data1_WREADY,
        m_axi_data1_WDATA,
        m_axi_data1_WSTRB,
        m_axi_data1_WLAST,
        m_axi_data1_WID,
        m_axi_data1_WUSER,
        m_axi_data1_ARVALID,
        m_axi_data1_ARREADY,
        m_axi_data1_ARADDR,
        m_axi_data1_ARID,
        m_axi_data1_ARLEN,
        m_axi_data1_ARSIZE,
        m_axi_data1_ARBURST,
        m_axi_data1_ARLOCK,
        m_axi_data1_ARCACHE,
        m_axi_data1_ARPROT,
        m_axi_data1_ARQOS,
        m_axi_data1_ARREGION,
        m_axi_data1_ARUSER,
        m_axi_data1_RVALID,
        m_axi_data1_RREADY,
        m_axi_data1_RDATA,
        m_axi_data1_RLAST,
        m_axi_data1_RID,
        m_axi_data1_RUSER,
        m_axi_data1_RRESP,
        m_axi_data1_BVALID,
        m_axi_data1_BREADY,
        m_axi_data1_BRESP,
        m_axi_data1_BID,
        m_axi_data1_BUSER,
        m_axi_data2_AWVALID,
        m_axi_data2_AWREADY,
        m_axi_data2_AWADDR,
        m_axi_data2_AWID,
        m_axi_data2_AWLEN,
        m_axi_data2_AWSIZE,
        m_axi_data2_AWBURST,
        m_axi_data2_AWLOCK,
        m_axi_data2_AWCACHE,
        m_axi_data2_AWPROT,
        m_axi_data2_AWQOS,
        m_axi_data2_AWREGION,
        m_axi_data2_AWUSER,
        m_axi_data2_WVALID,
        m_axi_data2_WREADY,
        m_axi_data2_WDATA,
        m_axi_data2_WSTRB,
        m_axi_data2_WLAST,
        m_axi_data2_WID,
        m_axi_data2_WUSER,
        m_axi_data2_ARVALID,
        m_axi_data2_ARREADY,
        m_axi_data2_ARADDR,
        m_axi_data2_ARID,
        m_axi_data2_ARLEN,
        m_axi_data2_ARSIZE,
        m_axi_data2_ARBURST,
        m_axi_data2_ARLOCK,
        m_axi_data2_ARCACHE,
        m_axi_data2_ARPROT,
        m_axi_data2_ARQOS,
        m_axi_data2_ARREGION,
        m_axi_data2_ARUSER,
        m_axi_data2_RVALID,
        m_axi_data2_RREADY,
        m_axi_data2_RDATA,
        m_axi_data2_RLAST,
        m_axi_data2_RID,
        m_axi_data2_RUSER,
        m_axi_data2_RRESP,
        m_axi_data2_BVALID,
        m_axi_data2_BREADY,
        m_axi_data2_BRESP,
        m_axi_data2_BID,
        m_axi_data2_BUSER,
        s_axi_ctrl_AWVALID,
        s_axi_ctrl_AWREADY,
        s_axi_ctrl_AWADDR,
        s_axi_ctrl_WVALID,
        s_axi_ctrl_WREADY,
        s_axi_ctrl_WDATA,
        s_axi_ctrl_WSTRB,
        s_axi_ctrl_ARVALID,
        s_axi_ctrl_ARREADY,
        s_axi_ctrl_ARADDR,
        s_axi_ctrl_RVALID,
        s_axi_ctrl_RREADY,
        s_axi_ctrl_RDATA,
        s_axi_ctrl_RRESP,
        s_axi_ctrl_BVALID,
        s_axi_ctrl_BREADY,
        s_axi_ctrl_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_pp0_stage0 = 18'd2;
parameter    ap_ST_fsm_pp0_stage1 = 18'd4;
parameter    ap_ST_fsm_pp0_stage2 = 18'd8;
parameter    ap_ST_fsm_pp0_stage3 = 18'd16;
parameter    ap_ST_fsm_pp0_stage4 = 18'd32;
parameter    ap_ST_fsm_pp0_stage5 = 18'd64;
parameter    ap_ST_fsm_pp0_stage6 = 18'd128;
parameter    ap_ST_fsm_pp0_stage7 = 18'd256;
parameter    ap_ST_fsm_pp0_stage8 = 18'd512;
parameter    ap_ST_fsm_pp0_stage9 = 18'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 18'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 18'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 18'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 18'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 18'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 18'd65536;
parameter    ap_ST_fsm_state88 = 18'd131072;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA0_ID_WIDTH = 1;
parameter    C_M_AXI_DATA0_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA0_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA0_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA0_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA0_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA0_USER_VALUE = 0;
parameter    C_M_AXI_DATA0_PROT_VALUE = 0;
parameter    C_M_AXI_DATA0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA1_ID_WIDTH = 1;
parameter    C_M_AXI_DATA1_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA1_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA1_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA1_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA1_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA1_USER_VALUE = 0;
parameter    C_M_AXI_DATA1_PROT_VALUE = 0;
parameter    C_M_AXI_DATA1_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA2_ID_WIDTH = 1;
parameter    C_M_AXI_DATA2_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA2_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA2_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA2_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA2_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA2_USER_VALUE = 0;
parameter    C_M_AXI_DATA2_PROT_VALUE = 0;
parameter    C_M_AXI_DATA2_CACHE_VALUE = 3;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA2_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_data0_AWVALID;
input   m_axi_data0_AWREADY;
output  [C_M_AXI_DATA0_ADDR_WIDTH - 1:0] m_axi_data0_AWADDR;
output  [C_M_AXI_DATA0_ID_WIDTH - 1:0] m_axi_data0_AWID;
output  [7:0] m_axi_data0_AWLEN;
output  [2:0] m_axi_data0_AWSIZE;
output  [1:0] m_axi_data0_AWBURST;
output  [1:0] m_axi_data0_AWLOCK;
output  [3:0] m_axi_data0_AWCACHE;
output  [2:0] m_axi_data0_AWPROT;
output  [3:0] m_axi_data0_AWQOS;
output  [3:0] m_axi_data0_AWREGION;
output  [C_M_AXI_DATA0_AWUSER_WIDTH - 1:0] m_axi_data0_AWUSER;
output   m_axi_data0_WVALID;
input   m_axi_data0_WREADY;
output  [C_M_AXI_DATA0_DATA_WIDTH - 1:0] m_axi_data0_WDATA;
output  [C_M_AXI_DATA0_WSTRB_WIDTH - 1:0] m_axi_data0_WSTRB;
output   m_axi_data0_WLAST;
output  [C_M_AXI_DATA0_ID_WIDTH - 1:0] m_axi_data0_WID;
output  [C_M_AXI_DATA0_WUSER_WIDTH - 1:0] m_axi_data0_WUSER;
output   m_axi_data0_ARVALID;
input   m_axi_data0_ARREADY;
output  [C_M_AXI_DATA0_ADDR_WIDTH - 1:0] m_axi_data0_ARADDR;
output  [C_M_AXI_DATA0_ID_WIDTH - 1:0] m_axi_data0_ARID;
output  [7:0] m_axi_data0_ARLEN;
output  [2:0] m_axi_data0_ARSIZE;
output  [1:0] m_axi_data0_ARBURST;
output  [1:0] m_axi_data0_ARLOCK;
output  [3:0] m_axi_data0_ARCACHE;
output  [2:0] m_axi_data0_ARPROT;
output  [3:0] m_axi_data0_ARQOS;
output  [3:0] m_axi_data0_ARREGION;
output  [C_M_AXI_DATA0_ARUSER_WIDTH - 1:0] m_axi_data0_ARUSER;
input   m_axi_data0_RVALID;
output   m_axi_data0_RREADY;
input  [C_M_AXI_DATA0_DATA_WIDTH - 1:0] m_axi_data0_RDATA;
input   m_axi_data0_RLAST;
input  [C_M_AXI_DATA0_ID_WIDTH - 1:0] m_axi_data0_RID;
input  [C_M_AXI_DATA0_RUSER_WIDTH - 1:0] m_axi_data0_RUSER;
input  [1:0] m_axi_data0_RRESP;
input   m_axi_data0_BVALID;
output   m_axi_data0_BREADY;
input  [1:0] m_axi_data0_BRESP;
input  [C_M_AXI_DATA0_ID_WIDTH - 1:0] m_axi_data0_BID;
input  [C_M_AXI_DATA0_BUSER_WIDTH - 1:0] m_axi_data0_BUSER;
output   m_axi_data1_AWVALID;
input   m_axi_data1_AWREADY;
output  [C_M_AXI_DATA1_ADDR_WIDTH - 1:0] m_axi_data1_AWADDR;
output  [C_M_AXI_DATA1_ID_WIDTH - 1:0] m_axi_data1_AWID;
output  [7:0] m_axi_data1_AWLEN;
output  [2:0] m_axi_data1_AWSIZE;
output  [1:0] m_axi_data1_AWBURST;
output  [1:0] m_axi_data1_AWLOCK;
output  [3:0] m_axi_data1_AWCACHE;
output  [2:0] m_axi_data1_AWPROT;
output  [3:0] m_axi_data1_AWQOS;
output  [3:0] m_axi_data1_AWREGION;
output  [C_M_AXI_DATA1_AWUSER_WIDTH - 1:0] m_axi_data1_AWUSER;
output   m_axi_data1_WVALID;
input   m_axi_data1_WREADY;
output  [C_M_AXI_DATA1_DATA_WIDTH - 1:0] m_axi_data1_WDATA;
output  [C_M_AXI_DATA1_WSTRB_WIDTH - 1:0] m_axi_data1_WSTRB;
output   m_axi_data1_WLAST;
output  [C_M_AXI_DATA1_ID_WIDTH - 1:0] m_axi_data1_WID;
output  [C_M_AXI_DATA1_WUSER_WIDTH - 1:0] m_axi_data1_WUSER;
output   m_axi_data1_ARVALID;
input   m_axi_data1_ARREADY;
output  [C_M_AXI_DATA1_ADDR_WIDTH - 1:0] m_axi_data1_ARADDR;
output  [C_M_AXI_DATA1_ID_WIDTH - 1:0] m_axi_data1_ARID;
output  [7:0] m_axi_data1_ARLEN;
output  [2:0] m_axi_data1_ARSIZE;
output  [1:0] m_axi_data1_ARBURST;
output  [1:0] m_axi_data1_ARLOCK;
output  [3:0] m_axi_data1_ARCACHE;
output  [2:0] m_axi_data1_ARPROT;
output  [3:0] m_axi_data1_ARQOS;
output  [3:0] m_axi_data1_ARREGION;
output  [C_M_AXI_DATA1_ARUSER_WIDTH - 1:0] m_axi_data1_ARUSER;
input   m_axi_data1_RVALID;
output   m_axi_data1_RREADY;
input  [C_M_AXI_DATA1_DATA_WIDTH - 1:0] m_axi_data1_RDATA;
input   m_axi_data1_RLAST;
input  [C_M_AXI_DATA1_ID_WIDTH - 1:0] m_axi_data1_RID;
input  [C_M_AXI_DATA1_RUSER_WIDTH - 1:0] m_axi_data1_RUSER;
input  [1:0] m_axi_data1_RRESP;
input   m_axi_data1_BVALID;
output   m_axi_data1_BREADY;
input  [1:0] m_axi_data1_BRESP;
input  [C_M_AXI_DATA1_ID_WIDTH - 1:0] m_axi_data1_BID;
input  [C_M_AXI_DATA1_BUSER_WIDTH - 1:0] m_axi_data1_BUSER;
output   m_axi_data2_AWVALID;
input   m_axi_data2_AWREADY;
output  [C_M_AXI_DATA2_ADDR_WIDTH - 1:0] m_axi_data2_AWADDR;
output  [C_M_AXI_DATA2_ID_WIDTH - 1:0] m_axi_data2_AWID;
output  [7:0] m_axi_data2_AWLEN;
output  [2:0] m_axi_data2_AWSIZE;
output  [1:0] m_axi_data2_AWBURST;
output  [1:0] m_axi_data2_AWLOCK;
output  [3:0] m_axi_data2_AWCACHE;
output  [2:0] m_axi_data2_AWPROT;
output  [3:0] m_axi_data2_AWQOS;
output  [3:0] m_axi_data2_AWREGION;
output  [C_M_AXI_DATA2_AWUSER_WIDTH - 1:0] m_axi_data2_AWUSER;
output   m_axi_data2_WVALID;
input   m_axi_data2_WREADY;
output  [C_M_AXI_DATA2_DATA_WIDTH - 1:0] m_axi_data2_WDATA;
output  [C_M_AXI_DATA2_WSTRB_WIDTH - 1:0] m_axi_data2_WSTRB;
output   m_axi_data2_WLAST;
output  [C_M_AXI_DATA2_ID_WIDTH - 1:0] m_axi_data2_WID;
output  [C_M_AXI_DATA2_WUSER_WIDTH - 1:0] m_axi_data2_WUSER;
output   m_axi_data2_ARVALID;
input   m_axi_data2_ARREADY;
output  [C_M_AXI_DATA2_ADDR_WIDTH - 1:0] m_axi_data2_ARADDR;
output  [C_M_AXI_DATA2_ID_WIDTH - 1:0] m_axi_data2_ARID;
output  [7:0] m_axi_data2_ARLEN;
output  [2:0] m_axi_data2_ARSIZE;
output  [1:0] m_axi_data2_ARBURST;
output  [1:0] m_axi_data2_ARLOCK;
output  [3:0] m_axi_data2_ARCACHE;
output  [2:0] m_axi_data2_ARPROT;
output  [3:0] m_axi_data2_ARQOS;
output  [3:0] m_axi_data2_ARREGION;
output  [C_M_AXI_DATA2_ARUSER_WIDTH - 1:0] m_axi_data2_ARUSER;
input   m_axi_data2_RVALID;
output   m_axi_data2_RREADY;
input  [C_M_AXI_DATA2_DATA_WIDTH - 1:0] m_axi_data2_RDATA;
input   m_axi_data2_RLAST;
input  [C_M_AXI_DATA2_ID_WIDTH - 1:0] m_axi_data2_RID;
input  [C_M_AXI_DATA2_RUSER_WIDTH - 1:0] m_axi_data2_RUSER;
input  [1:0] m_axi_data2_RRESP;
input   m_axi_data2_BVALID;
output   m_axi_data2_BREADY;
input  [1:0] m_axi_data2_BRESP;
input  [C_M_AXI_DATA2_ID_WIDTH - 1:0] m_axi_data2_BID;
input  [C_M_AXI_DATA2_BUSER_WIDTH - 1:0] m_axi_data2_BUSER;
input   s_axi_ctrl_AWVALID;
output   s_axi_ctrl_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_AWADDR;
input   s_axi_ctrl_WVALID;
output   s_axi_ctrl_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_ctrl_WSTRB;
input   s_axi_ctrl_ARVALID;
output   s_axi_ctrl_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_ARADDR;
output   s_axi_ctrl_RVALID;
input   s_axi_ctrl_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_RDATA;
output  [1:0] s_axi_ctrl_RRESP;
output   s_axi_ctrl_BVALID;
input   s_axi_ctrl_BREADY;
output  [1:0] s_axi_ctrl_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] A;
wire   [63:0] B;
wire   [63:0] AB;
reg    data0_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln15_reg_1358;
reg    data0_blk_n_R;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg    data1_blk_n_AR;
reg    data1_blk_n_R;
reg    data2_blk_n_AW;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] first_iter_0_reg_388;
reg   [0:0] first_iter_0_reg_388_pp0_iter4_reg;
reg    data2_blk_n_W;
reg    ap_enable_reg_pp0_iter5;
reg    data2_blk_n_B;
reg   [0:0] icmp_ln15_1_reg_1401;
reg   [0:0] icmp_ln15_1_reg_1401_pp0_iter5_reg;
reg   [0:0] first_iter_0_reg_388_pp0_iter1_reg;
wire    data0_AWREADY;
wire    data0_WREADY;
reg    data0_ARVALID;
wire    data0_ARREADY;
wire    data0_RVALID;
reg    data0_RREADY;
wire   [31:0] data0_RDATA;
wire   [8:0] data0_RFIFONUM;
wire    data0_BVALID;
wire    data1_AWREADY;
wire    data1_WREADY;
reg    data1_ARVALID;
wire    data1_ARREADY;
reg   [63:0] data1_ARADDR;
wire    data1_RVALID;
reg    data1_RREADY;
wire   [31:0] data1_RDATA;
wire   [8:0] data1_RFIFONUM;
wire    data1_BVALID;
reg    ap_block_state18_pp0_stage0_iter1;
reg    data2_AWVALID;
wire    data2_AWREADY;
reg    data2_WVALID;
wire    data2_WREADY;
wire   [31:0] data2_WDATA;
wire    data2_ARREADY;
wire    data2_RVALID;
wire   [31:0] data2_RDATA;
wire   [8:0] data2_RFIFONUM;
wire    data2_BVALID;
reg    data2_BREADY;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] first_iter_0_reg_388_pp0_iter2_reg;
reg   [0:0] first_iter_0_reg_388_pp0_iter3_reg;
reg   [31:0] reg_411;
reg    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state12_pp0_stage10_iter0;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state13_pp0_stage11_iter0;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state14_pp0_stage12_iter0;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state15_pp0_stage13_iter0;
reg    ap_block_state15_io;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state16_pp0_stage14_iter0;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_state17_pp0_stage15_iter0;
reg    ap_block_state17_io;
reg    ap_block_state81_io;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_state3_io;
reg    ap_block_state19_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_state4_io;
reg    ap_block_state20_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_state5_io;
reg    ap_block_state21_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state6_io;
reg    ap_block_state22_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state7_io;
reg    ap_block_state23_pp0_stage5_iter1;
reg    ap_block_state87_pp0_stage5_iter5;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_state8_io;
reg    ap_block_state24_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state9_io;
reg    ap_block_state25_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_state10_io;
reg    ap_block_state26_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
wire   [31:0] grp_fu_402_p2;
reg   [31:0] reg_415;
reg   [31:0] reg_420;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] reg_425;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] reg_430;
reg   [31:0] reg_435;
reg   [63:0] AB_read_reg_1328;
reg   [63:0] B_read_reg_1333;
reg   [63:0] A_read_reg_1353;
wire   [0:0] icmp_ln15_fu_458_p2;
wire   [8:0] add_ln15_fu_464_p2;
reg   [8:0] add_ln15_reg_1362;
wire   [4:0] select_ln15_fu_482_p3;
reg   [4:0] select_ln15_reg_1367;
wire   [4:0] select_ln15_1_fu_496_p3;
reg   [4:0] select_ln15_1_reg_1372;
reg   [63:0] data0_addr_reg_1377;
wire   [3:0] trunc_ln19_fu_545_p1;
reg   [3:0] trunc_ln19_reg_1383;
reg   [63:0] data1_addr_reg_1395;
wire   [0:0] icmp_ln15_1_fu_586_p2;
reg   [0:0] icmp_ln15_1_reg_1401_pp0_iter1_reg;
reg   [0:0] icmp_ln15_1_reg_1401_pp0_iter2_reg;
reg   [0:0] icmp_ln15_1_reg_1401_pp0_iter3_reg;
reg   [0:0] icmp_ln15_1_reg_1401_pp0_iter4_reg;
wire  signed [6:0] zext_ln19_1_cast_fu_592_p4;
reg  signed [6:0] zext_ln19_1_cast_reg_1405;
reg   [63:0] data1_addr_1_reg_1412;
wire  signed [7:0] zext_ln19_2_cast_fu_630_p4;
reg  signed [7:0] zext_ln19_2_cast_reg_1418;
reg   [63:0] data1_addr_2_reg_1424;
reg   [63:0] data1_addr_3_reg_1430;
wire  signed [8:0] zext_ln19_4_cast_fu_700_p4;
reg  signed [8:0] zext_ln19_4_cast_reg_1436;
reg   [63:0] data1_addr_4_reg_1441;
wire  signed [8:0] zext_ln19_5_cast_fu_738_p4;
reg  signed [8:0] zext_ln19_5_cast_reg_1447;
reg   [63:0] data1_addr_5_reg_1452;
reg   [63:0] data1_addr_6_reg_1458;
reg   [63:0] data1_addr_7_reg_1464;
reg   [63:0] data1_addr_8_reg_1470;
reg   [31:0] data1_addr_read_reg_1476;
reg   [63:0] data1_addr_9_reg_1481;
wire   [31:0] bitcast_ln19_fu_916_p1;
wire   [31:0] bitcast_ln19_1_fu_921_p1;
reg   [31:0] data1_addr_1_read_reg_1497;
reg   [63:0] data1_addr_10_reg_1502;
wire   [31:0] bitcast_ln19_2_fu_963_p1;
wire   [31:0] bitcast_ln19_3_fu_968_p1;
reg   [31:0] data1_addr_2_read_reg_1518;
reg   [63:0] data1_addr_11_reg_1523;
wire   [31:0] grp_fu_407_p2;
reg   [31:0] mul_reg_1529;
wire   [31:0] bitcast_ln19_4_fu_1010_p1;
wire   [31:0] bitcast_ln19_5_fu_1015_p1;
reg   [31:0] data1_addr_3_read_reg_1544;
reg   [63:0] data1_addr_12_reg_1549;
reg   [31:0] mul_1_reg_1555;
wire   [31:0] bitcast_ln19_6_fu_1051_p1;
wire   [31:0] bitcast_ln19_7_fu_1056_p1;
reg   [31:0] data1_addr_4_read_reg_1570;
reg   [63:0] data1_addr_13_reg_1575;
reg   [31:0] mul_2_reg_1581;
wire   [31:0] bitcast_ln19_8_fu_1092_p1;
wire   [31:0] bitcast_ln19_9_fu_1097_p1;
reg   [31:0] data1_addr_5_read_reg_1596;
reg   [63:0] data1_addr_14_reg_1601;
reg   [31:0] mul_3_reg_1607;
wire   [31:0] bitcast_ln19_10_fu_1133_p1;
wire   [31:0] bitcast_ln19_11_fu_1138_p1;
reg   [31:0] data1_addr_6_read_reg_1622;
reg   [63:0] data1_addr_15_reg_1627;
reg   [31:0] mul_4_reg_1633;
wire   [31:0] bitcast_ln19_12_fu_1192_p1;
wire   [31:0] bitcast_ln19_13_fu_1197_p1;
reg   [31:0] data1_addr_7_read_reg_1648;
reg   [31:0] mul_5_reg_1653;
reg   [31:0] mul_5_reg_1653_pp0_iter2_reg;
wire   [31:0] bitcast_ln19_14_fu_1201_p1;
wire   [31:0] bitcast_ln19_15_fu_1206_p1;
reg   [31:0] data1_addr_8_read_reg_1668;
reg   [31:0] mul_6_reg_1673;
reg   [31:0] mul_6_reg_1673_pp0_iter2_reg;
wire   [31:0] bitcast_ln19_16_fu_1210_p1;
wire   [31:0] bitcast_ln19_17_fu_1215_p1;
reg   [31:0] data1_addr_9_read_reg_1688;
reg   [31:0] mul_7_reg_1693;
reg   [31:0] mul_7_reg_1693_pp0_iter2_reg;
wire   [31:0] bitcast_ln19_18_fu_1219_p1;
wire   [31:0] bitcast_ln19_19_fu_1224_p1;
reg   [31:0] data1_addr_10_read_reg_1708;
reg   [31:0] mul_8_reg_1713;
reg   [31:0] mul_8_reg_1713_pp0_iter2_reg;
wire   [31:0] bitcast_ln19_20_fu_1228_p1;
wire   [31:0] bitcast_ln19_21_fu_1233_p1;
reg   [31:0] data1_addr_11_read_reg_1728;
reg   [31:0] mul_9_reg_1733;
reg   [31:0] mul_9_reg_1733_pp0_iter2_reg;
wire   [31:0] bitcast_ln19_22_fu_1237_p1;
wire   [31:0] bitcast_ln19_23_fu_1242_p1;
reg   [31:0] data1_addr_12_read_reg_1748;
reg   [31:0] mul_s_reg_1753;
reg   [31:0] mul_s_reg_1753_pp0_iter2_reg;
reg   [31:0] mul_s_reg_1753_pp0_iter3_reg;
wire   [31:0] bitcast_ln19_24_fu_1246_p1;
wire   [31:0] bitcast_ln19_25_fu_1251_p1;
reg   [31:0] data1_addr_13_read_reg_1768;
reg   [31:0] mul_10_reg_1773;
reg   [31:0] mul_10_reg_1773_pp0_iter2_reg;
reg   [31:0] mul_10_reg_1773_pp0_iter3_reg;
wire   [31:0] bitcast_ln19_26_fu_1255_p1;
wire   [31:0] bitcast_ln19_27_fu_1260_p1;
reg   [31:0] data1_addr_14_read_reg_1788;
reg   [31:0] mul_11_reg_1793;
reg   [31:0] mul_11_reg_1793_pp0_iter2_reg;
reg   [31:0] mul_11_reg_1793_pp0_iter3_reg;
wire   [31:0] bitcast_ln19_28_fu_1264_p1;
wire   [31:0] bitcast_ln19_29_fu_1269_p1;
reg   [31:0] data1_addr_15_read_reg_1808;
reg   [31:0] mul_12_reg_1813;
reg   [31:0] mul_12_reg_1813_pp0_iter2_reg;
reg   [31:0] mul_12_reg_1813_pp0_iter3_reg;
wire   [31:0] bitcast_ln19_30_fu_1273_p1;
wire   [31:0] bitcast_ln19_31_fu_1278_p1;
reg   [31:0] mul_13_reg_1828;
reg   [31:0] mul_13_reg_1828_pp0_iter2_reg;
reg   [31:0] mul_13_reg_1828_pp0_iter3_reg;
reg   [31:0] mul_14_reg_1833;
reg   [31:0] mul_14_reg_1833_pp0_iter2_reg;
reg   [31:0] mul_14_reg_1833_pp0_iter3_reg;
reg   [31:0] mul_14_reg_1833_pp0_iter4_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage5_subdone;
wire  signed [63:0] sext_ln18_fu_535_p1;
wire  signed [63:0] sext_ln19_fu_576_p1;
wire  signed [63:0] sext_ln19_1_fu_620_p1;
wire  signed [63:0] sext_ln19_2_fu_658_p1;
wire  signed [63:0] sext_ln19_3_fu_690_p1;
wire  signed [63:0] sext_ln19_4_fu_728_p1;
wire  signed [63:0] sext_ln19_5_fu_766_p1;
wire  signed [63:0] sext_ln19_6_fu_798_p1;
wire  signed [63:0] sext_ln19_7_fu_830_p1;
wire  signed [63:0] sext_ln19_8_fu_868_p1;
wire  signed [63:0] sext_ln19_9_fu_906_p1;
wire  signed [63:0] sext_ln19_10_fu_953_p1;
wire  signed [63:0] sext_ln19_11_fu_1000_p1;
wire  signed [63:0] sext_ln19_12_fu_1041_p1;
wire  signed [63:0] sext_ln19_13_fu_1082_p1;
wire  signed [63:0] sext_ln19_14_fu_1123_p1;
wire  signed [63:0] sext_ln19_15_fu_1164_p1;
wire   [63:0] sext_ln15_fu_1291_p1;
reg    ap_block_pp0_stage0_01001;
reg   [4:0] j_fu_138;
wire   [4:0] add_ln16_1_fu_1174_p2;
reg   [4:0] i_fu_142;
reg   [8:0] indvar_flatten_fu_146;
reg   [31:0] grp_fu_402_p0;
reg   [31:0] grp_fu_402_p1;
reg   [31:0] grp_fu_407_p0;
reg   [31:0] grp_fu_407_p1;
wire   [0:0] icmp_ln16_fu_476_p2;
wire   [4:0] add_ln15_1_fu_490_p2;
wire   [3:0] trunc_ln16_fu_504_p1;
wire   [9:0] shl_ln_fu_508_p3;
wire   [63:0] zext_ln16_fu_516_p1;
wire   [63:0] add_ln16_fu_520_p2;
wire   [61:0] trunc_ln1_fu_525_p4;
wire   [5:0] shl_ln1_fu_549_p3;
wire   [63:0] zext_ln19_fu_557_p1;
wire   [63:0] add_ln19_fu_561_p2;
wire   [61:0] trunc_ln2_fu_566_p4;
wire   [63:0] zext_ln19_1_fu_601_p1;
wire   [63:0] add_ln19_1_fu_605_p2;
wire   [61:0] trunc_ln19_1_fu_610_p4;
wire   [63:0] zext_ln19_2_fu_639_p1;
wire   [63:0] add_ln19_2_fu_643_p2;
wire   [61:0] trunc_ln19_2_fu_648_p4;
wire  signed [7:0] sext_ln19_16_fu_668_p1;
wire   [63:0] zext_ln19_3_fu_671_p1;
wire   [63:0] add_ln19_3_fu_675_p2;
wire   [61:0] trunc_ln19_3_fu_680_p4;
wire   [63:0] zext_ln19_4_fu_709_p1;
wire   [63:0] add_ln19_4_fu_713_p2;
wire   [61:0] trunc_ln19_4_fu_718_p4;
wire   [63:0] zext_ln19_5_fu_747_p1;
wire   [63:0] add_ln19_5_fu_751_p2;
wire   [61:0] trunc_ln19_5_fu_756_p4;
wire  signed [8:0] sext_ln19_17_fu_776_p1;
wire   [63:0] zext_ln19_6_fu_779_p1;
wire   [63:0] add_ln19_6_fu_783_p2;
wire   [61:0] trunc_ln19_6_fu_788_p4;
wire  signed [8:0] sext_ln19_18_fu_808_p1;
wire   [63:0] zext_ln19_7_fu_811_p1;
wire   [63:0] add_ln19_7_fu_815_p2;
wire   [61:0] trunc_ln19_7_fu_820_p4;
wire   [9:0] zext_ln19_8_cast_fu_840_p4;
wire   [63:0] zext_ln19_8_fu_849_p1;
wire   [63:0] add_ln19_8_fu_853_p2;
wire   [61:0] trunc_ln19_8_fu_858_p4;
wire   [9:0] zext_ln19_9_cast_fu_878_p4;
wire   [63:0] zext_ln19_9_fu_887_p1;
wire   [63:0] add_ln19_9_fu_891_p2;
wire   [61:0] trunc_ln19_9_fu_896_p4;
wire   [9:0] zext_ln19_10_cast_fu_925_p4;
wire   [63:0] zext_ln19_10_fu_934_p1;
wire   [63:0] add_ln19_10_fu_938_p2;
wire   [61:0] trunc_ln19_s_fu_943_p4;
wire   [9:0] zext_ln19_11_cast_fu_972_p4;
wire   [63:0] zext_ln19_11_fu_981_p1;
wire   [63:0] add_ln19_11_fu_985_p2;
wire   [61:0] trunc_ln19_10_fu_990_p4;
wire  signed [9:0] sext_ln19_19_fu_1019_p1;
wire   [63:0] zext_ln19_12_fu_1022_p1;
wire   [63:0] add_ln19_12_fu_1026_p2;
wire   [61:0] trunc_ln19_11_fu_1031_p4;
wire  signed [9:0] sext_ln19_20_fu_1060_p1;
wire   [63:0] zext_ln19_13_fu_1063_p1;
wire   [63:0] add_ln19_13_fu_1067_p2;
wire   [61:0] trunc_ln19_12_fu_1072_p4;
wire  signed [9:0] sext_ln19_21_fu_1101_p1;
wire   [63:0] zext_ln19_14_fu_1104_p1;
wire   [63:0] add_ln19_14_fu_1108_p2;
wire   [61:0] trunc_ln19_13_fu_1113_p4;
wire  signed [9:0] sext_ln19_22_fu_1142_p1;
wire   [63:0] zext_ln19_15_fu_1145_p1;
wire   [63:0] add_ln19_15_fu_1149_p2;
wire   [61:0] trunc_ln19_14_fu_1154_p4;
wire   [61:0] trunc_ln_fu_1282_p4;
reg    grp_fu_402_ce;
reg    grp_fu_407_ce;
wire    ap_CS_fsm_state88;
reg   [17:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state88_blk;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 j_fu_138 = 5'd0;
#0 i_fu_142 = 5'd0;
#0 indvar_flatten_fu_146 = 9'd0;
end

matmul_plain_ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
ctrl_s_axi_U(
    .AWVALID(s_axi_ctrl_AWVALID),
    .AWREADY(s_axi_ctrl_AWREADY),
    .AWADDR(s_axi_ctrl_AWADDR),
    .WVALID(s_axi_ctrl_WVALID),
    .WREADY(s_axi_ctrl_WREADY),
    .WDATA(s_axi_ctrl_WDATA),
    .WSTRB(s_axi_ctrl_WSTRB),
    .ARVALID(s_axi_ctrl_ARVALID),
    .ARREADY(s_axi_ctrl_ARREADY),
    .ARADDR(s_axi_ctrl_ARADDR),
    .RVALID(s_axi_ctrl_RVALID),
    .RREADY(s_axi_ctrl_RREADY),
    .RDATA(s_axi_ctrl_RDATA),
    .RRESP(s_axi_ctrl_RRESP),
    .BVALID(s_axi_ctrl_BVALID),
    .BREADY(s_axi_ctrl_BREADY),
    .BRESP(s_axi_ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .A(A),
    .B(B),
    .AB(AB),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

matmul_plain_data0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA0_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
data0_m_axi_U(
    .AWVALID(m_axi_data0_AWVALID),
    .AWREADY(m_axi_data0_AWREADY),
    .AWADDR(m_axi_data0_AWADDR),
    .AWID(m_axi_data0_AWID),
    .AWLEN(m_axi_data0_AWLEN),
    .AWSIZE(m_axi_data0_AWSIZE),
    .AWBURST(m_axi_data0_AWBURST),
    .AWLOCK(m_axi_data0_AWLOCK),
    .AWCACHE(m_axi_data0_AWCACHE),
    .AWPROT(m_axi_data0_AWPROT),
    .AWQOS(m_axi_data0_AWQOS),
    .AWREGION(m_axi_data0_AWREGION),
    .AWUSER(m_axi_data0_AWUSER),
    .WVALID(m_axi_data0_WVALID),
    .WREADY(m_axi_data0_WREADY),
    .WDATA(m_axi_data0_WDATA),
    .WSTRB(m_axi_data0_WSTRB),
    .WLAST(m_axi_data0_WLAST),
    .WID(m_axi_data0_WID),
    .WUSER(m_axi_data0_WUSER),
    .ARVALID(m_axi_data0_ARVALID),
    .ARREADY(m_axi_data0_ARREADY),
    .ARADDR(m_axi_data0_ARADDR),
    .ARID(m_axi_data0_ARID),
    .ARLEN(m_axi_data0_ARLEN),
    .ARSIZE(m_axi_data0_ARSIZE),
    .ARBURST(m_axi_data0_ARBURST),
    .ARLOCK(m_axi_data0_ARLOCK),
    .ARCACHE(m_axi_data0_ARCACHE),
    .ARPROT(m_axi_data0_ARPROT),
    .ARQOS(m_axi_data0_ARQOS),
    .ARREGION(m_axi_data0_ARREGION),
    .ARUSER(m_axi_data0_ARUSER),
    .RVALID(m_axi_data0_RVALID),
    .RREADY(m_axi_data0_RREADY),
    .RDATA(m_axi_data0_RDATA),
    .RLAST(m_axi_data0_RLAST),
    .RID(m_axi_data0_RID),
    .RUSER(m_axi_data0_RUSER),
    .RRESP(m_axi_data0_RRESP),
    .BVALID(m_axi_data0_BVALID),
    .BREADY(m_axi_data0_BREADY),
    .BRESP(m_axi_data0_BRESP),
    .BID(m_axi_data0_BID),
    .BUSER(m_axi_data0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(data0_ARVALID),
    .I_ARREADY(data0_ARREADY),
    .I_ARADDR(data0_addr_reg_1377),
    .I_ARLEN(32'd16),
    .I_RVALID(data0_RVALID),
    .I_RREADY(data0_RREADY),
    .I_RDATA(data0_RDATA),
    .I_RFIFONUM(data0_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(data0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(data0_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(data0_BVALID),
    .I_BREADY(1'b0)
);

matmul_plain_data1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA1_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
data1_m_axi_U(
    .AWVALID(m_axi_data1_AWVALID),
    .AWREADY(m_axi_data1_AWREADY),
    .AWADDR(m_axi_data1_AWADDR),
    .AWID(m_axi_data1_AWID),
    .AWLEN(m_axi_data1_AWLEN),
    .AWSIZE(m_axi_data1_AWSIZE),
    .AWBURST(m_axi_data1_AWBURST),
    .AWLOCK(m_axi_data1_AWLOCK),
    .AWCACHE(m_axi_data1_AWCACHE),
    .AWPROT(m_axi_data1_AWPROT),
    .AWQOS(m_axi_data1_AWQOS),
    .AWREGION(m_axi_data1_AWREGION),
    .AWUSER(m_axi_data1_AWUSER),
    .WVALID(m_axi_data1_WVALID),
    .WREADY(m_axi_data1_WREADY),
    .WDATA(m_axi_data1_WDATA),
    .WSTRB(m_axi_data1_WSTRB),
    .WLAST(m_axi_data1_WLAST),
    .WID(m_axi_data1_WID),
    .WUSER(m_axi_data1_WUSER),
    .ARVALID(m_axi_data1_ARVALID),
    .ARREADY(m_axi_data1_ARREADY),
    .ARADDR(m_axi_data1_ARADDR),
    .ARID(m_axi_data1_ARID),
    .ARLEN(m_axi_data1_ARLEN),
    .ARSIZE(m_axi_data1_ARSIZE),
    .ARBURST(m_axi_data1_ARBURST),
    .ARLOCK(m_axi_data1_ARLOCK),
    .ARCACHE(m_axi_data1_ARCACHE),
    .ARPROT(m_axi_data1_ARPROT),
    .ARQOS(m_axi_data1_ARQOS),
    .ARREGION(m_axi_data1_ARREGION),
    .ARUSER(m_axi_data1_ARUSER),
    .RVALID(m_axi_data1_RVALID),
    .RREADY(m_axi_data1_RREADY),
    .RDATA(m_axi_data1_RDATA),
    .RLAST(m_axi_data1_RLAST),
    .RID(m_axi_data1_RID),
    .RUSER(m_axi_data1_RUSER),
    .RRESP(m_axi_data1_RRESP),
    .BVALID(m_axi_data1_BVALID),
    .BREADY(m_axi_data1_BREADY),
    .BRESP(m_axi_data1_BRESP),
    .BID(m_axi_data1_BID),
    .BUSER(m_axi_data1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(data1_ARVALID),
    .I_ARREADY(data1_ARREADY),
    .I_ARADDR(data1_ARADDR),
    .I_ARLEN(32'd1),
    .I_RVALID(data1_RVALID),
    .I_RREADY(data1_RREADY),
    .I_RDATA(data1_RDATA),
    .I_RFIFONUM(data1_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(data1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(data1_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(data1_BVALID),
    .I_BREADY(1'b0)
);

matmul_plain_data2_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 4 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA2_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
data2_m_axi_U(
    .AWVALID(m_axi_data2_AWVALID),
    .AWREADY(m_axi_data2_AWREADY),
    .AWADDR(m_axi_data2_AWADDR),
    .AWID(m_axi_data2_AWID),
    .AWLEN(m_axi_data2_AWLEN),
    .AWSIZE(m_axi_data2_AWSIZE),
    .AWBURST(m_axi_data2_AWBURST),
    .AWLOCK(m_axi_data2_AWLOCK),
    .AWCACHE(m_axi_data2_AWCACHE),
    .AWPROT(m_axi_data2_AWPROT),
    .AWQOS(m_axi_data2_AWQOS),
    .AWREGION(m_axi_data2_AWREGION),
    .AWUSER(m_axi_data2_AWUSER),
    .WVALID(m_axi_data2_WVALID),
    .WREADY(m_axi_data2_WREADY),
    .WDATA(m_axi_data2_WDATA),
    .WSTRB(m_axi_data2_WSTRB),
    .WLAST(m_axi_data2_WLAST),
    .WID(m_axi_data2_WID),
    .WUSER(m_axi_data2_WUSER),
    .ARVALID(m_axi_data2_ARVALID),
    .ARREADY(m_axi_data2_ARREADY),
    .ARADDR(m_axi_data2_ARADDR),
    .ARID(m_axi_data2_ARID),
    .ARLEN(m_axi_data2_ARLEN),
    .ARSIZE(m_axi_data2_ARSIZE),
    .ARBURST(m_axi_data2_ARBURST),
    .ARLOCK(m_axi_data2_ARLOCK),
    .ARCACHE(m_axi_data2_ARCACHE),
    .ARPROT(m_axi_data2_ARPROT),
    .ARQOS(m_axi_data2_ARQOS),
    .ARREGION(m_axi_data2_ARREGION),
    .ARUSER(m_axi_data2_ARUSER),
    .RVALID(m_axi_data2_RVALID),
    .RREADY(m_axi_data2_RREADY),
    .RDATA(m_axi_data2_RDATA),
    .RLAST(m_axi_data2_RLAST),
    .RID(m_axi_data2_RID),
    .RUSER(m_axi_data2_RUSER),
    .RRESP(m_axi_data2_RRESP),
    .BVALID(m_axi_data2_BVALID),
    .BREADY(m_axi_data2_BREADY),
    .BRESP(m_axi_data2_BRESP),
    .BID(m_axi_data2_BID),
    .BUSER(m_axi_data2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(data2_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(data2_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(data2_RDATA),
    .I_RFIFONUM(data2_RFIFONUM),
    .I_AWVALID(data2_AWVALID),
    .I_AWREADY(data2_AWREADY),
    .I_AWADDR(sext_ln15_fu_1291_p1),
    .I_AWLEN(32'd256),
    .I_WVALID(data2_WVALID),
    .I_WREADY(data2_WREADY),
    .I_WDATA(data2_WDATA),
    .I_WSTRB(4'd15),
    .I_BVALID(data2_BVALID),
    .I_BREADY(data2_BREADY)
);

matmul_plain_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_402_p0),
    .din1(grp_fu_402_p1),
    .ce(grp_fu_402_ce),
    .dout(grp_fu_402_p2)
);

matmul_plain_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_407_p0),
    .din1(grp_fu_407_p1),
    .ce(grp_fu_407_ce),
    .dout(grp_fu_407_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        first_iter_0_reg_388 <= 1'd0;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        first_iter_0_reg_388 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_142 <= 5'd0;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        i_fu_142 <= select_ln15_1_reg_1372;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_146 <= 9'd0;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        indvar_flatten_fu_146 <= add_ln15_reg_1362;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_fu_138 <= 5'd0;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        j_fu_138 <= add_ln16_1_fu_1174_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        AB_read_reg_1328 <= AB;
        A_read_reg_1353 <= A;
        B_read_reg_1333 <= B;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln15_reg_1362 <= add_ln15_fu_464_p2;
        data0_addr_reg_1377 <= sext_ln18_fu_535_p1;
        data1_addr_7_read_reg_1648 <= data1_RDATA;
        data1_addr_reg_1395 <= sext_ln19_fu_576_p1;
        first_iter_0_reg_388_pp0_iter1_reg <= first_iter_0_reg_388;
        first_iter_0_reg_388_pp0_iter2_reg <= first_iter_0_reg_388_pp0_iter1_reg;
        first_iter_0_reg_388_pp0_iter3_reg <= first_iter_0_reg_388_pp0_iter2_reg;
        first_iter_0_reg_388_pp0_iter4_reg <= first_iter_0_reg_388_pp0_iter3_reg;
        icmp_ln15_1_reg_1401 <= icmp_ln15_1_fu_586_p2;
        icmp_ln15_1_reg_1401_pp0_iter1_reg <= icmp_ln15_1_reg_1401;
        icmp_ln15_1_reg_1401_pp0_iter2_reg <= icmp_ln15_1_reg_1401_pp0_iter1_reg;
        icmp_ln15_1_reg_1401_pp0_iter3_reg <= icmp_ln15_1_reg_1401_pp0_iter2_reg;
        icmp_ln15_1_reg_1401_pp0_iter4_reg <= icmp_ln15_1_reg_1401_pp0_iter3_reg;
        icmp_ln15_1_reg_1401_pp0_iter5_reg <= icmp_ln15_1_reg_1401_pp0_iter4_reg;
        icmp_ln15_reg_1358 <= icmp_ln15_fu_458_p2;
        select_ln15_1_reg_1372 <= select_ln15_1_fu_496_p3;
        select_ln15_reg_1367 <= select_ln15_fu_482_p3;
        trunc_ln19_reg_1383 <= trunc_ln19_fu_545_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        data1_addr_10_read_reg_1708 <= data1_RDATA;
        data1_addr_3_reg_1430 <= sext_ln19_3_fu_690_p1;
        mul_7_reg_1693_pp0_iter2_reg <= mul_7_reg_1693;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        data1_addr_10_reg_1502 <= sext_ln19_10_fu_953_p1;
        data1_addr_1_read_reg_1497 <= data1_RDATA;
        mul_13_reg_1828_pp0_iter2_reg <= mul_13_reg_1828;
        mul_13_reg_1828_pp0_iter3_reg <= mul_13_reg_1828_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        data1_addr_11_read_reg_1728 <= data1_RDATA;
        data1_addr_4_reg_1441 <= sext_ln19_4_fu_728_p1;
        mul_8_reg_1713_pp0_iter2_reg <= mul_8_reg_1713;
        zext_ln19_4_cast_reg_1436[5 : 2] <= zext_ln19_4_cast_fu_700_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        data1_addr_11_reg_1523 <= sext_ln19_11_fu_1000_p1;
        data1_addr_2_read_reg_1518 <= data1_RDATA;
        mul_14_reg_1833_pp0_iter2_reg <= mul_14_reg_1833;
        mul_14_reg_1833_pp0_iter3_reg <= mul_14_reg_1833_pp0_iter2_reg;
        mul_14_reg_1833_pp0_iter4_reg <= mul_14_reg_1833_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        data1_addr_12_read_reg_1748 <= data1_RDATA;
        data1_addr_5_reg_1452 <= sext_ln19_5_fu_766_p1;
        mul_9_reg_1733_pp0_iter2_reg <= mul_9_reg_1733;
        zext_ln19_5_cast_reg_1447[5 : 2] <= zext_ln19_5_cast_fu_738_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        data1_addr_12_reg_1549 <= sext_ln19_12_fu_1041_p1;
        data1_addr_3_read_reg_1544 <= data1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        data1_addr_13_read_reg_1768 <= data1_RDATA;
        data1_addr_6_reg_1458 <= sext_ln19_6_fu_798_p1;
        mul_s_reg_1753_pp0_iter2_reg <= mul_s_reg_1753;
        mul_s_reg_1753_pp0_iter3_reg <= mul_s_reg_1753_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        data1_addr_13_reg_1575 <= sext_ln19_13_fu_1082_p1;
        data1_addr_4_read_reg_1570 <= data1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        data1_addr_14_read_reg_1788 <= data1_RDATA;
        data1_addr_7_reg_1464 <= sext_ln19_7_fu_830_p1;
        mul_10_reg_1773_pp0_iter2_reg <= mul_10_reg_1773;
        mul_10_reg_1773_pp0_iter3_reg <= mul_10_reg_1773_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        data1_addr_14_reg_1601 <= sext_ln19_14_fu_1123_p1;
        data1_addr_5_read_reg_1596 <= data1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        data1_addr_15_read_reg_1808 <= data1_RDATA;
        data1_addr_8_reg_1470 <= sext_ln19_8_fu_868_p1;
        mul_11_reg_1793_pp0_iter2_reg <= mul_11_reg_1793;
        mul_11_reg_1793_pp0_iter3_reg <= mul_11_reg_1793_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        data1_addr_15_reg_1627 <= sext_ln19_15_fu_1164_p1;
        data1_addr_6_read_reg_1622 <= data1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data1_addr_1_reg_1412 <= sext_ln19_1_fu_620_p1;
        data1_addr_8_read_reg_1668 <= data1_RDATA;
        mul_5_reg_1653_pp0_iter2_reg <= mul_5_reg_1653;
        zext_ln19_1_cast_reg_1405[5 : 2] <= zext_ln19_1_cast_fu_592_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        data1_addr_2_reg_1424 <= sext_ln19_2_fu_658_p1;
        data1_addr_9_read_reg_1688 <= data1_RDATA;
        mul_6_reg_1673_pp0_iter2_reg <= mul_6_reg_1673;
        zext_ln19_2_cast_reg_1418[5 : 2] <= zext_ln19_2_cast_fu_630_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        data1_addr_9_reg_1481 <= sext_ln19_9_fu_906_p1;
        data1_addr_read_reg_1476 <= data1_RDATA;
        mul_12_reg_1813_pp0_iter2_reg <= mul_12_reg_1813;
        mul_12_reg_1813_pp0_iter3_reg <= mul_12_reg_1813_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_10_reg_1773 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul_11_reg_1793 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul_12_reg_1813 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul_13_reg_1828 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul_14_reg_1833 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        mul_1_reg_1555 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        mul_2_reg_1581 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        mul_3_reg_1607 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_4_reg_1633 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_5_reg_1653 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_6_reg_1673 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_7_reg_1693 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_8_reg_1713 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_9_reg_1733 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        mul_reg_1529 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_s_reg_1753 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) 
    & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_411 <= data0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_415 <= grp_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        reg_420 <= grp_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        reg_425 <= grp_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        reg_430 <= grp_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)))) begin
        reg_435 <= grp_fu_402_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state88_blk = 1'b0;

always @ (*) begin
    if ((icmp_ln15_fu_458_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data0_ARVALID = 1'b1;
    end else begin
        data0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        data0_RREADY = 1'b1;
    end else begin
        data0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data0_blk_n_AR = m_axi_data0_ARREADY;
    end else begin
        data0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) 
    & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        data0_blk_n_R = m_axi_data0_RVALID;
    end else begin
        data0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data1_ARADDR = data1_addr_15_reg_1627;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        data1_ARADDR = data1_addr_14_reg_1601;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        data1_ARADDR = data1_addr_13_reg_1575;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        data1_ARADDR = data1_addr_12_reg_1549;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        data1_ARADDR = data1_addr_11_reg_1523;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        data1_ARADDR = data1_addr_10_reg_1502;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        data1_ARADDR = data1_addr_9_reg_1481;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        data1_ARADDR = data1_addr_8_reg_1470;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        data1_ARADDR = data1_addr_7_reg_1464;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        data1_ARADDR = data1_addr_6_reg_1458;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        data1_ARADDR = data1_addr_5_reg_1452;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        data1_ARADDR = data1_addr_4_reg_1441;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        data1_ARADDR = data1_addr_3_reg_1430;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        data1_ARADDR = data1_addr_2_reg_1424;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        data1_ARADDR = data1_addr_1_reg_1412;
    end else if (((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        data1_ARADDR = data1_addr_reg_1395;
    end else begin
        data1_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) 
    | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        data1_ARVALID = 1'b1;
    end else begin
        data1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        data1_RREADY = 1'b1;
    end else begin
        data1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) 
    | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        data1_blk_n_AR = m_axi_data1_ARREADY;
    end else begin
        data1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) 
    & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln15_reg_1358 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        data1_blk_n_R = m_axi_data1_RVALID;
    end else begin
        data1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((first_iter_0_reg_388_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        data2_AWVALID = 1'b1;
    end else begin
        data2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln15_1_reg_1401_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        data2_BREADY = 1'b1;
    end else begin
        data2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data2_WVALID = 1'b1;
    end else begin
        data2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((first_iter_0_reg_388_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        data2_blk_n_AW = m_axi_data2_AWREADY;
    end else begin
        data2_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln15_1_reg_1401_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        data2_blk_n_B = m_axi_data2_BVALID;
    end else begin
        data2_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data2_blk_n_W = m_axi_data2_WREADY;
    end else begin
        data2_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) 
    | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_402_ce = 1'b1;
    end else begin
        grp_fu_402_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12)))) begin
        grp_fu_402_p0 = reg_435;
    end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_402_p0 = reg_430;
    end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        grp_fu_402_p0 = reg_425;
    end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14)))) begin
        grp_fu_402_p0 = reg_420;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_402_p0 = reg_415;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_402_p0 = mul_reg_1529;
    end else begin
        grp_fu_402_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_402_p1 = mul_14_reg_1833_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_402_p1 = mul_13_reg_1828_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_402_p1 = mul_12_reg_1813_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_402_p1 = mul_11_reg_1793_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_402_p1 = mul_10_reg_1773_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_402_p1 = mul_s_reg_1753_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_402_p1 = mul_9_reg_1733_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_402_p1 = mul_8_reg_1713_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_402_p1 = mul_7_reg_1693_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_402_p1 = mul_6_reg_1673_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_402_p1 = mul_5_reg_1653_pp0_iter2_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_402_p1 = mul_4_reg_1633;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_402_p1 = mul_3_reg_1607;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_402_p1 = mul_2_reg_1581;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_402_p1 = mul_1_reg_1555;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_402_p1 = 32'd0;
    end else begin
        grp_fu_402_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) 
    | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_407_ce = 1'b1;
    end else begin
        grp_fu_407_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_407_p0 = bitcast_ln19_30_fu_1273_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_407_p0 = bitcast_ln19_28_fu_1264_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_407_p0 = bitcast_ln19_26_fu_1255_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_407_p0 = bitcast_ln19_24_fu_1246_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_407_p0 = bitcast_ln19_22_fu_1237_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_407_p0 = bitcast_ln19_20_fu_1228_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_407_p0 = bitcast_ln19_18_fu_1219_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_407_p0 = bitcast_ln19_16_fu_1210_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_407_p0 = bitcast_ln19_14_fu_1201_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_407_p0 = bitcast_ln19_12_fu_1192_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_407_p0 = bitcast_ln19_10_fu_1133_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_407_p0 = bitcast_ln19_8_fu_1092_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_407_p0 = bitcast_ln19_6_fu_1051_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_407_p0 = bitcast_ln19_4_fu_1010_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_407_p0 = bitcast_ln19_2_fu_963_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_407_p0 = bitcast_ln19_fu_916_p1;
    end else begin
        grp_fu_407_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_407_p1 = bitcast_ln19_31_fu_1278_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_407_p1 = bitcast_ln19_29_fu_1269_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_407_p1 = bitcast_ln19_27_fu_1260_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_407_p1 = bitcast_ln19_25_fu_1251_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_407_p1 = bitcast_ln19_23_fu_1242_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_407_p1 = bitcast_ln19_21_fu_1233_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_407_p1 = bitcast_ln19_19_fu_1224_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_407_p1 = bitcast_ln19_17_fu_1215_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_407_p1 = bitcast_ln19_15_fu_1206_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_407_p1 = bitcast_ln19_13_fu_1197_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        grp_fu_407_p1 = bitcast_ln19_11_fu_1138_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_407_p1 = bitcast_ln19_9_fu_1097_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_407_p1 = bitcast_ln19_7_fu_1056_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_407_p1 = bitcast_ln19_5_fu_1015_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_407_p1 = bitcast_ln19_3_fu_968_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_407_p1 = bitcast_ln19_1_fu_921_p1;
    end else begin
        grp_fu_407_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln15_fu_458_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln15_fu_458_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((~((ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_1_fu_490_p2 = (i_fu_142 + 5'd1);

assign add_ln15_fu_464_p2 = (indvar_flatten_fu_146 + 9'd1);

assign add_ln16_1_fu_1174_p2 = (select_ln15_reg_1367 + 5'd1);

assign add_ln16_fu_520_p2 = (zext_ln16_fu_516_p1 + A_read_reg_1353);

assign add_ln19_10_fu_938_p2 = (zext_ln19_10_fu_934_p1 + B_read_reg_1333);

assign add_ln19_11_fu_985_p2 = (zext_ln19_11_fu_981_p1 + B_read_reg_1333);

assign add_ln19_12_fu_1026_p2 = (zext_ln19_12_fu_1022_p1 + B_read_reg_1333);

assign add_ln19_13_fu_1067_p2 = (zext_ln19_13_fu_1063_p1 + B_read_reg_1333);

assign add_ln19_14_fu_1108_p2 = (zext_ln19_14_fu_1104_p1 + B_read_reg_1333);

assign add_ln19_15_fu_1149_p2 = (zext_ln19_15_fu_1145_p1 + B_read_reg_1333);

assign add_ln19_1_fu_605_p2 = (zext_ln19_1_fu_601_p1 + B_read_reg_1333);

assign add_ln19_2_fu_643_p2 = (zext_ln19_2_fu_639_p1 + B_read_reg_1333);

assign add_ln19_3_fu_675_p2 = (zext_ln19_3_fu_671_p1 + B_read_reg_1333);

assign add_ln19_4_fu_713_p2 = (zext_ln19_4_fu_709_p1 + B_read_reg_1333);

assign add_ln19_5_fu_751_p2 = (zext_ln19_5_fu_747_p1 + B_read_reg_1333);

assign add_ln19_6_fu_783_p2 = (zext_ln19_6_fu_779_p1 + B_read_reg_1333);

assign add_ln19_7_fu_815_p2 = (zext_ln19_7_fu_811_p1 + B_read_reg_1333);

assign add_ln19_8_fu_853_p2 = (zext_ln19_8_fu_849_p1 + B_read_reg_1333);

assign add_ln19_9_fu_891_p2 = (zext_ln19_9_fu_887_p1 + B_read_reg_1333);

assign add_ln19_fu_561_p2 = (zext_ln19_fu_557_p1 + B_read_reg_1333);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd17];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b1 == ap_block_state18_pp0_stage0_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((data2_WREADY == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((data1_ARREADY == 1'b0) | (1'b1 == ap_block_state18_pp0_stage0_iter1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((data2_WREADY == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((data1_ARREADY == 1'b0) | (1'b1 == ap_block_state18_pp0_stage0_iter1))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | (1'b1 == ap_block_state12_pp0_stage10_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | (1'b1 == ap_block_state12_pp0_stage10_iter0)));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | (1'b1 == ap_block_state13_pp0_stage11_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | (1'b1 == ap_block_state13_pp0_stage11_iter0)));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | (1'b1 == ap_block_state14_pp0_stage12_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | (1'b1 == ap_block_state14_pp0_stage12_iter0)));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | (1'b1 == ap_block_state15_pp0_stage13_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | (1'b1 == ap_block_state15_pp0_stage13_iter0)));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | (1'b1 == ap_block_state16_pp0_stage14_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | (1'b1 == ap_block_state16_pp0_stage14_iter0)));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state81_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | (1'b1 == ap_block_state17_pp0_stage15_iter0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state81_io)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | (1'b1 == ap_block_state17_pp0_stage15_iter0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b1 == ap_block_state19_pp0_stage1_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b1 == ap_block_state19_pp0_stage1_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state3_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((1'b1 == ap_block_state20_pp0_stage2_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((1'b1 == ap_block_state20_pp0_stage2_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((1'b1 == ap_block_state21_pp0_stage3_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((1'b1 == ap_block_state21_pp0_stage3_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((1'b1 == ap_block_state22_pp0_stage4_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((1'b1 == ap_block_state22_pp0_stage4_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((1'b1 == ap_block_state23_pp0_stage5_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state87_pp0_stage5_iter5)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((1'b1 == ap_block_state23_pp0_stage5_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state87_pp0_stage5_iter5)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((1'b1 == ap_block_state24_pp0_stage6_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((1'b1 == ap_block_state24_pp0_stage6_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((1'b1 == ap_block_state25_pp0_stage7_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((1'b1 == ap_block_state25_pp0_stage7_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((1'b1 == ap_block_state26_pp0_stage8_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((1'b1 == ap_block_state26_pp0_stage8_iter1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | (1'b1 == ap_block_state11_pp0_stage9_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | (1'b1 == ap_block_state11_pp0_stage9_iter0)));
end

always @ (*) begin
    ap_block_state10_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state11_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = (((data1_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)) | ((data0_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)));
end

always @ (*) begin
    ap_block_state12_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage10_iter0 = (((data1_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)) | ((data0_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)));
end

always @ (*) begin
    ap_block_state13_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage11_iter0 = (((data1_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)) | ((data0_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)));
end

always @ (*) begin
    ap_block_state14_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage12_iter0 = (((data1_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)) | ((data0_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)));
end

always @ (*) begin
    ap_block_state15_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage13_iter0 = (((data1_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)) | ((data0_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)));
end

always @ (*) begin
    ap_block_state16_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage14_iter0 = (((data1_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)) | ((data0_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)));
end

always @ (*) begin
    ap_block_state17_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = (((data1_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)) | ((data0_RVALID == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)));
end

always @ (*) begin
    ap_block_state18_pp0_stage0_iter1 = ((data1_RVALID == 1'b0) | (data0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage1_iter1 = ((data1_RVALID == 1'b0) | (data0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp0_stage2_iter1 = ((data1_RVALID == 1'b0) | (data0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage3_iter1 = ((data1_RVALID == 1'b0) | (data0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage4_iter1 = ((data1_RVALID == 1'b0) | (data0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage5_iter1 = ((data1_RVALID == 1'b0) | (data0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage6_iter1 = ((data1_RVALID == 1'b0) | (data0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage7_iter1 = ((data1_RVALID == 1'b0) | (data0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage8_iter1 = ((data1_RVALID == 1'b0) | (data0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_io = (((data0_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)) | ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0)));
end

always @ (*) begin
    ap_block_state4_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state5_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state6_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state7_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state81_io = ((data2_AWREADY == 1'b0) & (first_iter_0_reg_388_pp0_iter4_reg == 1'd1));
end

always @ (*) begin
    ap_block_state87_pp0_stage5_iter5 = ((data2_BVALID == 1'b0) & (icmp_ln15_1_reg_1401_pp0_iter5_reg == 1'd1));
end

always @ (*) begin
    ap_block_state8_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

always @ (*) begin
    ap_block_state9_io = ((data1_ARREADY == 1'b0) & (icmp_ln15_reg_1358 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln19_10_fu_1133_p1 = reg_411;

assign bitcast_ln19_11_fu_1138_p1 = data1_addr_5_read_reg_1596;

assign bitcast_ln19_12_fu_1192_p1 = reg_411;

assign bitcast_ln19_13_fu_1197_p1 = data1_addr_6_read_reg_1622;

assign bitcast_ln19_14_fu_1201_p1 = reg_411;

assign bitcast_ln19_15_fu_1206_p1 = data1_addr_7_read_reg_1648;

assign bitcast_ln19_16_fu_1210_p1 = reg_411;

assign bitcast_ln19_17_fu_1215_p1 = data1_addr_8_read_reg_1668;

assign bitcast_ln19_18_fu_1219_p1 = reg_411;

assign bitcast_ln19_19_fu_1224_p1 = data1_addr_9_read_reg_1688;

assign bitcast_ln19_1_fu_921_p1 = data1_addr_read_reg_1476;

assign bitcast_ln19_20_fu_1228_p1 = reg_411;

assign bitcast_ln19_21_fu_1233_p1 = data1_addr_10_read_reg_1708;

assign bitcast_ln19_22_fu_1237_p1 = reg_411;

assign bitcast_ln19_23_fu_1242_p1 = data1_addr_11_read_reg_1728;

assign bitcast_ln19_24_fu_1246_p1 = reg_411;

assign bitcast_ln19_25_fu_1251_p1 = data1_addr_12_read_reg_1748;

assign bitcast_ln19_26_fu_1255_p1 = reg_411;

assign bitcast_ln19_27_fu_1260_p1 = data1_addr_13_read_reg_1768;

assign bitcast_ln19_28_fu_1264_p1 = reg_411;

assign bitcast_ln19_29_fu_1269_p1 = data1_addr_14_read_reg_1788;

assign bitcast_ln19_2_fu_963_p1 = reg_411;

assign bitcast_ln19_30_fu_1273_p1 = reg_411;

assign bitcast_ln19_31_fu_1278_p1 = data1_addr_15_read_reg_1808;

assign bitcast_ln19_3_fu_968_p1 = data1_addr_1_read_reg_1497;

assign bitcast_ln19_4_fu_1010_p1 = reg_411;

assign bitcast_ln19_5_fu_1015_p1 = data1_addr_2_read_reg_1518;

assign bitcast_ln19_6_fu_1051_p1 = reg_411;

assign bitcast_ln19_7_fu_1056_p1 = data1_addr_3_read_reg_1544;

assign bitcast_ln19_8_fu_1092_p1 = reg_411;

assign bitcast_ln19_9_fu_1097_p1 = data1_addr_4_read_reg_1570;

assign bitcast_ln19_fu_916_p1 = reg_411;

assign data2_WDATA = reg_415;

assign icmp_ln15_1_fu_586_p2 = ((add_ln15_fu_464_p2 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_458_p2 = ((indvar_flatten_fu_146 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_476_p2 = ((j_fu_138 == 5'd16) ? 1'b1 : 1'b0);

assign select_ln15_1_fu_496_p3 = ((icmp_ln16_fu_476_p2[0:0] == 1'b1) ? add_ln15_1_fu_490_p2 : i_fu_142);

assign select_ln15_fu_482_p3 = ((icmp_ln16_fu_476_p2[0:0] == 1'b1) ? 5'd0 : j_fu_138);

assign sext_ln15_fu_1291_p1 = $signed(trunc_ln_fu_1282_p4);

assign sext_ln18_fu_535_p1 = $signed(trunc_ln1_fu_525_p4);

assign sext_ln19_10_fu_953_p1 = $signed(trunc_ln19_s_fu_943_p4);

assign sext_ln19_11_fu_1000_p1 = $signed(trunc_ln19_10_fu_990_p4);

assign sext_ln19_12_fu_1041_p1 = $signed(trunc_ln19_11_fu_1031_p4);

assign sext_ln19_13_fu_1082_p1 = $signed(trunc_ln19_12_fu_1072_p4);

assign sext_ln19_14_fu_1123_p1 = $signed(trunc_ln19_13_fu_1113_p4);

assign sext_ln19_15_fu_1164_p1 = $signed(trunc_ln19_14_fu_1154_p4);

assign sext_ln19_16_fu_668_p1 = zext_ln19_1_cast_reg_1405;

assign sext_ln19_17_fu_776_p1 = zext_ln19_2_cast_reg_1418;

assign sext_ln19_18_fu_808_p1 = zext_ln19_1_cast_reg_1405;

assign sext_ln19_19_fu_1019_p1 = zext_ln19_4_cast_reg_1436;

assign sext_ln19_1_fu_620_p1 = $signed(trunc_ln19_1_fu_610_p4);

assign sext_ln19_20_fu_1060_p1 = zext_ln19_5_cast_reg_1447;

assign sext_ln19_21_fu_1101_p1 = zext_ln19_2_cast_reg_1418;

assign sext_ln19_22_fu_1142_p1 = zext_ln19_1_cast_reg_1405;

assign sext_ln19_2_fu_658_p1 = $signed(trunc_ln19_2_fu_648_p4);

assign sext_ln19_3_fu_690_p1 = $signed(trunc_ln19_3_fu_680_p4);

assign sext_ln19_4_fu_728_p1 = $signed(trunc_ln19_4_fu_718_p4);

assign sext_ln19_5_fu_766_p1 = $signed(trunc_ln19_5_fu_756_p4);

assign sext_ln19_6_fu_798_p1 = $signed(trunc_ln19_6_fu_788_p4);

assign sext_ln19_7_fu_830_p1 = $signed(trunc_ln19_7_fu_820_p4);

assign sext_ln19_8_fu_868_p1 = $signed(trunc_ln19_8_fu_858_p4);

assign sext_ln19_9_fu_906_p1 = $signed(trunc_ln19_9_fu_896_p4);

assign sext_ln19_fu_576_p1 = $signed(trunc_ln2_fu_566_p4);

assign shl_ln1_fu_549_p3 = {{trunc_ln19_fu_545_p1}, {2'd0}};

assign shl_ln_fu_508_p3 = {{trunc_ln16_fu_504_p1}, {6'd0}};

assign trunc_ln16_fu_504_p1 = select_ln15_1_fu_496_p3[3:0];

assign trunc_ln19_10_fu_990_p4 = {{add_ln19_11_fu_985_p2[63:2]}};

assign trunc_ln19_11_fu_1031_p4 = {{add_ln19_12_fu_1026_p2[63:2]}};

assign trunc_ln19_12_fu_1072_p4 = {{add_ln19_13_fu_1067_p2[63:2]}};

assign trunc_ln19_13_fu_1113_p4 = {{add_ln19_14_fu_1108_p2[63:2]}};

assign trunc_ln19_14_fu_1154_p4 = {{add_ln19_15_fu_1149_p2[63:2]}};

assign trunc_ln19_1_fu_610_p4 = {{add_ln19_1_fu_605_p2[63:2]}};

assign trunc_ln19_2_fu_648_p4 = {{add_ln19_2_fu_643_p2[63:2]}};

assign trunc_ln19_3_fu_680_p4 = {{add_ln19_3_fu_675_p2[63:2]}};

assign trunc_ln19_4_fu_718_p4 = {{add_ln19_4_fu_713_p2[63:2]}};

assign trunc_ln19_5_fu_756_p4 = {{add_ln19_5_fu_751_p2[63:2]}};

assign trunc_ln19_6_fu_788_p4 = {{add_ln19_6_fu_783_p2[63:2]}};

assign trunc_ln19_7_fu_820_p4 = {{add_ln19_7_fu_815_p2[63:2]}};

assign trunc_ln19_8_fu_858_p4 = {{add_ln19_8_fu_853_p2[63:2]}};

assign trunc_ln19_9_fu_896_p4 = {{add_ln19_9_fu_891_p2[63:2]}};

assign trunc_ln19_fu_545_p1 = select_ln15_fu_482_p3[3:0];

assign trunc_ln19_s_fu_943_p4 = {{add_ln19_10_fu_938_p2[63:2]}};

assign trunc_ln1_fu_525_p4 = {{add_ln16_fu_520_p2[63:2]}};

assign trunc_ln2_fu_566_p4 = {{add_ln19_fu_561_p2[63:2]}};

assign trunc_ln_fu_1282_p4 = {{AB_read_reg_1328[63:2]}};

assign zext_ln16_fu_516_p1 = shl_ln_fu_508_p3;

assign zext_ln19_10_cast_fu_925_p4 = {{{{4'd10}, {trunc_ln19_reg_1383}}}, {2'd0}};

assign zext_ln19_10_fu_934_p1 = zext_ln19_10_cast_fu_925_p4;

assign zext_ln19_11_cast_fu_972_p4 = {{{{4'd11}, {trunc_ln19_reg_1383}}}, {2'd0}};

assign zext_ln19_11_fu_981_p1 = zext_ln19_11_cast_fu_972_p4;

assign zext_ln19_12_fu_1022_p1 = $unsigned(sext_ln19_19_fu_1019_p1);

assign zext_ln19_13_fu_1063_p1 = $unsigned(sext_ln19_20_fu_1060_p1);

assign zext_ln19_14_fu_1104_p1 = $unsigned(sext_ln19_21_fu_1101_p1);

assign zext_ln19_15_fu_1145_p1 = $unsigned(sext_ln19_22_fu_1142_p1);

assign zext_ln19_1_cast_fu_592_p4 = {{{{1'd1}, {trunc_ln19_reg_1383}}}, {2'd0}};

assign zext_ln19_1_fu_601_p1 = $unsigned(zext_ln19_1_cast_fu_592_p4);

assign zext_ln19_2_cast_fu_630_p4 = {{{{2'd2}, {trunc_ln19_reg_1383}}}, {2'd0}};

assign zext_ln19_2_fu_639_p1 = $unsigned(zext_ln19_2_cast_fu_630_p4);

assign zext_ln19_3_fu_671_p1 = $unsigned(sext_ln19_16_fu_668_p1);

assign zext_ln19_4_cast_fu_700_p4 = {{{{3'd4}, {trunc_ln19_reg_1383}}}, {2'd0}};

assign zext_ln19_4_fu_709_p1 = $unsigned(zext_ln19_4_cast_fu_700_p4);

assign zext_ln19_5_cast_fu_738_p4 = {{{{3'd5}, {trunc_ln19_reg_1383}}}, {2'd0}};

assign zext_ln19_5_fu_747_p1 = $unsigned(zext_ln19_5_cast_fu_738_p4);

assign zext_ln19_6_fu_779_p1 = $unsigned(sext_ln19_17_fu_776_p1);

assign zext_ln19_7_fu_811_p1 = $unsigned(sext_ln19_18_fu_808_p1);

assign zext_ln19_8_cast_fu_840_p4 = {{{{4'd8}, {trunc_ln19_reg_1383}}}, {2'd0}};

assign zext_ln19_8_fu_849_p1 = zext_ln19_8_cast_fu_840_p4;

assign zext_ln19_9_cast_fu_878_p4 = {{{{4'd9}, {trunc_ln19_reg_1383}}}, {2'd0}};

assign zext_ln19_9_fu_887_p1 = zext_ln19_9_cast_fu_878_p4;

assign zext_ln19_fu_557_p1 = shl_ln1_fu_549_p3;

always @ (posedge ap_clk) begin
    zext_ln19_1_cast_reg_1405[1:0] <= 2'b00;
    zext_ln19_1_cast_reg_1405[6] <= 1'b1;
    zext_ln19_2_cast_reg_1418[1:0] <= 2'b00;
    zext_ln19_2_cast_reg_1418[7:6] <= 2'b10;
    zext_ln19_4_cast_reg_1436[1:0] <= 2'b00;
    zext_ln19_4_cast_reg_1436[8:6] <= 3'b100;
    zext_ln19_5_cast_reg_1447[1:0] <= 2'b00;
    zext_ln19_5_cast_reg_1447[8:6] <= 3'b101;
end

endmodule //matmul_plain
