// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module matmul_optimized_matmul_optimized_Pipeline_VITIS_LOOP_25_1_VITIS_LOOP_26_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_dataA_AWVALID,
        m_axi_dataA_AWREADY,
        m_axi_dataA_AWADDR,
        m_axi_dataA_AWID,
        m_axi_dataA_AWLEN,
        m_axi_dataA_AWSIZE,
        m_axi_dataA_AWBURST,
        m_axi_dataA_AWLOCK,
        m_axi_dataA_AWCACHE,
        m_axi_dataA_AWPROT,
        m_axi_dataA_AWQOS,
        m_axi_dataA_AWREGION,
        m_axi_dataA_AWUSER,
        m_axi_dataA_WVALID,
        m_axi_dataA_WREADY,
        m_axi_dataA_WDATA,
        m_axi_dataA_WSTRB,
        m_axi_dataA_WLAST,
        m_axi_dataA_WID,
        m_axi_dataA_WUSER,
        m_axi_dataA_ARVALID,
        m_axi_dataA_ARREADY,
        m_axi_dataA_ARADDR,
        m_axi_dataA_ARID,
        m_axi_dataA_ARLEN,
        m_axi_dataA_ARSIZE,
        m_axi_dataA_ARBURST,
        m_axi_dataA_ARLOCK,
        m_axi_dataA_ARCACHE,
        m_axi_dataA_ARPROT,
        m_axi_dataA_ARQOS,
        m_axi_dataA_ARREGION,
        m_axi_dataA_ARUSER,
        m_axi_dataA_RVALID,
        m_axi_dataA_RREADY,
        m_axi_dataA_RDATA,
        m_axi_dataA_RLAST,
        m_axi_dataA_RID,
        m_axi_dataA_RFIFONUM,
        m_axi_dataA_RUSER,
        m_axi_dataA_RRESP,
        m_axi_dataA_BVALID,
        m_axi_dataA_BREADY,
        m_axi_dataA_BRESP,
        m_axi_dataA_BID,
        m_axi_dataA_BUSER,
        m_axi_dataB_AWVALID,
        m_axi_dataB_AWREADY,
        m_axi_dataB_AWADDR,
        m_axi_dataB_AWID,
        m_axi_dataB_AWLEN,
        m_axi_dataB_AWSIZE,
        m_axi_dataB_AWBURST,
        m_axi_dataB_AWLOCK,
        m_axi_dataB_AWCACHE,
        m_axi_dataB_AWPROT,
        m_axi_dataB_AWQOS,
        m_axi_dataB_AWREGION,
        m_axi_dataB_AWUSER,
        m_axi_dataB_WVALID,
        m_axi_dataB_WREADY,
        m_axi_dataB_WDATA,
        m_axi_dataB_WSTRB,
        m_axi_dataB_WLAST,
        m_axi_dataB_WID,
        m_axi_dataB_WUSER,
        m_axi_dataB_ARVALID,
        m_axi_dataB_ARREADY,
        m_axi_dataB_ARADDR,
        m_axi_dataB_ARID,
        m_axi_dataB_ARLEN,
        m_axi_dataB_ARSIZE,
        m_axi_dataB_ARBURST,
        m_axi_dataB_ARLOCK,
        m_axi_dataB_ARCACHE,
        m_axi_dataB_ARPROT,
        m_axi_dataB_ARQOS,
        m_axi_dataB_ARREGION,
        m_axi_dataB_ARUSER,
        m_axi_dataB_RVALID,
        m_axi_dataB_RREADY,
        m_axi_dataB_RDATA,
        m_axi_dataB_RLAST,
        m_axi_dataB_RID,
        m_axi_dataB_RFIFONUM,
        m_axi_dataB_RUSER,
        m_axi_dataB_RRESP,
        m_axi_dataB_BVALID,
        m_axi_dataB_BREADY,
        m_axi_dataB_BRESP,
        m_axi_dataB_BID,
        m_axi_dataB_BUSER,
        sext_ln25,
        sext_ln25_1,
        AB_local_address0,
        AB_local_ce0,
        AB_local_we0,
        AB_local_d0,
        B_local_address0,
        B_local_ce0,
        B_local_we0,
        B_local_d0,
        B_local_1_address0,
        B_local_1_ce0,
        B_local_1_we0,
        B_local_1_d0,
        B_local_2_address0,
        B_local_2_ce0,
        B_local_2_we0,
        B_local_2_d0,
        B_local_3_address0,
        B_local_3_ce0,
        B_local_3_we0,
        B_local_3_d0,
        B_local_4_address0,
        B_local_4_ce0,
        B_local_4_we0,
        B_local_4_d0,
        B_local_5_address0,
        B_local_5_ce0,
        B_local_5_we0,
        B_local_5_d0,
        B_local_6_address0,
        B_local_6_ce0,
        B_local_6_we0,
        B_local_6_d0,
        B_local_7_address0,
        B_local_7_ce0,
        B_local_7_we0,
        B_local_7_d0,
        B_local_8_address0,
        B_local_8_ce0,
        B_local_8_we0,
        B_local_8_d0,
        B_local_9_address0,
        B_local_9_ce0,
        B_local_9_we0,
        B_local_9_d0,
        B_local_10_address0,
        B_local_10_ce0,
        B_local_10_we0,
        B_local_10_d0,
        B_local_11_address0,
        B_local_11_ce0,
        B_local_11_we0,
        B_local_11_d0,
        B_local_12_address0,
        B_local_12_ce0,
        B_local_12_we0,
        B_local_12_d0,
        B_local_13_address0,
        B_local_13_ce0,
        B_local_13_we0,
        B_local_13_d0,
        B_local_14_address0,
        B_local_14_ce0,
        B_local_14_we0,
        B_local_14_d0,
        B_local_15_address0,
        B_local_15_ce0,
        B_local_15_we0,
        B_local_15_d0,
        A_local_address0,
        A_local_ce0,
        A_local_we0,
        A_local_d0,
        A_local_1_address0,
        A_local_1_ce0,
        A_local_1_we0,
        A_local_1_d0,
        A_local_2_address0,
        A_local_2_ce0,
        A_local_2_we0,
        A_local_2_d0,
        A_local_3_address0,
        A_local_3_ce0,
        A_local_3_we0,
        A_local_3_d0,
        A_local_4_address0,
        A_local_4_ce0,
        A_local_4_we0,
        A_local_4_d0,
        A_local_5_address0,
        A_local_5_ce0,
        A_local_5_we0,
        A_local_5_d0,
        A_local_6_address0,
        A_local_6_ce0,
        A_local_6_we0,
        A_local_6_d0,
        A_local_7_address0,
        A_local_7_ce0,
        A_local_7_we0,
        A_local_7_d0,
        A_local_8_address0,
        A_local_8_ce0,
        A_local_8_we0,
        A_local_8_d0,
        A_local_9_address0,
        A_local_9_ce0,
        A_local_9_we0,
        A_local_9_d0,
        A_local_10_address0,
        A_local_10_ce0,
        A_local_10_we0,
        A_local_10_d0,
        A_local_11_address0,
        A_local_11_ce0,
        A_local_11_we0,
        A_local_11_d0,
        A_local_12_address0,
        A_local_12_ce0,
        A_local_12_we0,
        A_local_12_d0,
        A_local_13_address0,
        A_local_13_ce0,
        A_local_13_we0,
        A_local_13_d0,
        A_local_14_address0,
        A_local_14_ce0,
        A_local_14_we0,
        A_local_14_d0,
        A_local_15_address0,
        A_local_15_ce0,
        A_local_15_we0,
        A_local_15_d0,
        AB_local_1_address0,
        AB_local_1_ce0,
        AB_local_1_we0,
        AB_local_1_d0,
        AB_local_2_address0,
        AB_local_2_ce0,
        AB_local_2_we0,
        AB_local_2_d0,
        AB_local_3_address0,
        AB_local_3_ce0,
        AB_local_3_we0,
        AB_local_3_d0,
        AB_local_4_address0,
        AB_local_4_ce0,
        AB_local_4_we0,
        AB_local_4_d0,
        AB_local_5_address0,
        AB_local_5_ce0,
        AB_local_5_we0,
        AB_local_5_d0,
        AB_local_6_address0,
        AB_local_6_ce0,
        AB_local_6_we0,
        AB_local_6_d0,
        AB_local_7_address0,
        AB_local_7_ce0,
        AB_local_7_we0,
        AB_local_7_d0,
        AB_local_8_address0,
        AB_local_8_ce0,
        AB_local_8_we0,
        AB_local_8_d0,
        AB_local_9_address0,
        AB_local_9_ce0,
        AB_local_9_we0,
        AB_local_9_d0,
        AB_local_10_address0,
        AB_local_10_ce0,
        AB_local_10_we0,
        AB_local_10_d0,
        AB_local_11_address0,
        AB_local_11_ce0,
        AB_local_11_we0,
        AB_local_11_d0,
        AB_local_12_address0,
        AB_local_12_ce0,
        AB_local_12_we0,
        AB_local_12_d0,
        AB_local_13_address0,
        AB_local_13_ce0,
        AB_local_13_we0,
        AB_local_13_d0,
        AB_local_14_address0,
        AB_local_14_ce0,
        AB_local_14_we0,
        AB_local_14_d0,
        AB_local_15_address0,
        AB_local_15_ce0,
        AB_local_15_we0,
        AB_local_15_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_dataA_AWVALID;
input   m_axi_dataA_AWREADY;
output  [63:0] m_axi_dataA_AWADDR;
output  [0:0] m_axi_dataA_AWID;
output  [31:0] m_axi_dataA_AWLEN;
output  [2:0] m_axi_dataA_AWSIZE;
output  [1:0] m_axi_dataA_AWBURST;
output  [1:0] m_axi_dataA_AWLOCK;
output  [3:0] m_axi_dataA_AWCACHE;
output  [2:0] m_axi_dataA_AWPROT;
output  [3:0] m_axi_dataA_AWQOS;
output  [3:0] m_axi_dataA_AWREGION;
output  [0:0] m_axi_dataA_AWUSER;
output   m_axi_dataA_WVALID;
input   m_axi_dataA_WREADY;
output  [31:0] m_axi_dataA_WDATA;
output  [3:0] m_axi_dataA_WSTRB;
output   m_axi_dataA_WLAST;
output  [0:0] m_axi_dataA_WID;
output  [0:0] m_axi_dataA_WUSER;
output   m_axi_dataA_ARVALID;
input   m_axi_dataA_ARREADY;
output  [63:0] m_axi_dataA_ARADDR;
output  [0:0] m_axi_dataA_ARID;
output  [31:0] m_axi_dataA_ARLEN;
output  [2:0] m_axi_dataA_ARSIZE;
output  [1:0] m_axi_dataA_ARBURST;
output  [1:0] m_axi_dataA_ARLOCK;
output  [3:0] m_axi_dataA_ARCACHE;
output  [2:0] m_axi_dataA_ARPROT;
output  [3:0] m_axi_dataA_ARQOS;
output  [3:0] m_axi_dataA_ARREGION;
output  [0:0] m_axi_dataA_ARUSER;
input   m_axi_dataA_RVALID;
output   m_axi_dataA_RREADY;
input  [31:0] m_axi_dataA_RDATA;
input   m_axi_dataA_RLAST;
input  [0:0] m_axi_dataA_RID;
input  [8:0] m_axi_dataA_RFIFONUM;
input  [0:0] m_axi_dataA_RUSER;
input  [1:0] m_axi_dataA_RRESP;
input   m_axi_dataA_BVALID;
output   m_axi_dataA_BREADY;
input  [1:0] m_axi_dataA_BRESP;
input  [0:0] m_axi_dataA_BID;
input  [0:0] m_axi_dataA_BUSER;
output   m_axi_dataB_AWVALID;
input   m_axi_dataB_AWREADY;
output  [63:0] m_axi_dataB_AWADDR;
output  [0:0] m_axi_dataB_AWID;
output  [31:0] m_axi_dataB_AWLEN;
output  [2:0] m_axi_dataB_AWSIZE;
output  [1:0] m_axi_dataB_AWBURST;
output  [1:0] m_axi_dataB_AWLOCK;
output  [3:0] m_axi_dataB_AWCACHE;
output  [2:0] m_axi_dataB_AWPROT;
output  [3:0] m_axi_dataB_AWQOS;
output  [3:0] m_axi_dataB_AWREGION;
output  [0:0] m_axi_dataB_AWUSER;
output   m_axi_dataB_WVALID;
input   m_axi_dataB_WREADY;
output  [31:0] m_axi_dataB_WDATA;
output  [3:0] m_axi_dataB_WSTRB;
output   m_axi_dataB_WLAST;
output  [0:0] m_axi_dataB_WID;
output  [0:0] m_axi_dataB_WUSER;
output   m_axi_dataB_ARVALID;
input   m_axi_dataB_ARREADY;
output  [63:0] m_axi_dataB_ARADDR;
output  [0:0] m_axi_dataB_ARID;
output  [31:0] m_axi_dataB_ARLEN;
output  [2:0] m_axi_dataB_ARSIZE;
output  [1:0] m_axi_dataB_ARBURST;
output  [1:0] m_axi_dataB_ARLOCK;
output  [3:0] m_axi_dataB_ARCACHE;
output  [2:0] m_axi_dataB_ARPROT;
output  [3:0] m_axi_dataB_ARQOS;
output  [3:0] m_axi_dataB_ARREGION;
output  [0:0] m_axi_dataB_ARUSER;
input   m_axi_dataB_RVALID;
output   m_axi_dataB_RREADY;
input  [31:0] m_axi_dataB_RDATA;
input   m_axi_dataB_RLAST;
input  [0:0] m_axi_dataB_RID;
input  [8:0] m_axi_dataB_RFIFONUM;
input  [0:0] m_axi_dataB_RUSER;
input  [1:0] m_axi_dataB_RRESP;
input   m_axi_dataB_BVALID;
output   m_axi_dataB_BREADY;
input  [1:0] m_axi_dataB_BRESP;
input  [0:0] m_axi_dataB_BID;
input  [0:0] m_axi_dataB_BUSER;
input  [61:0] sext_ln25;
input  [61:0] sext_ln25_1;
output  [3:0] AB_local_address0;
output   AB_local_ce0;
output   AB_local_we0;
output  [31:0] AB_local_d0;
output  [3:0] B_local_address0;
output   B_local_ce0;
output   B_local_we0;
output  [31:0] B_local_d0;
output  [3:0] B_local_1_address0;
output   B_local_1_ce0;
output   B_local_1_we0;
output  [31:0] B_local_1_d0;
output  [3:0] B_local_2_address0;
output   B_local_2_ce0;
output   B_local_2_we0;
output  [31:0] B_local_2_d0;
output  [3:0] B_local_3_address0;
output   B_local_3_ce0;
output   B_local_3_we0;
output  [31:0] B_local_3_d0;
output  [3:0] B_local_4_address0;
output   B_local_4_ce0;
output   B_local_4_we0;
output  [31:0] B_local_4_d0;
output  [3:0] B_local_5_address0;
output   B_local_5_ce0;
output   B_local_5_we0;
output  [31:0] B_local_5_d0;
output  [3:0] B_local_6_address0;
output   B_local_6_ce0;
output   B_local_6_we0;
output  [31:0] B_local_6_d0;
output  [3:0] B_local_7_address0;
output   B_local_7_ce0;
output   B_local_7_we0;
output  [31:0] B_local_7_d0;
output  [3:0] B_local_8_address0;
output   B_local_8_ce0;
output   B_local_8_we0;
output  [31:0] B_local_8_d0;
output  [3:0] B_local_9_address0;
output   B_local_9_ce0;
output   B_local_9_we0;
output  [31:0] B_local_9_d0;
output  [3:0] B_local_10_address0;
output   B_local_10_ce0;
output   B_local_10_we0;
output  [31:0] B_local_10_d0;
output  [3:0] B_local_11_address0;
output   B_local_11_ce0;
output   B_local_11_we0;
output  [31:0] B_local_11_d0;
output  [3:0] B_local_12_address0;
output   B_local_12_ce0;
output   B_local_12_we0;
output  [31:0] B_local_12_d0;
output  [3:0] B_local_13_address0;
output   B_local_13_ce0;
output   B_local_13_we0;
output  [31:0] B_local_13_d0;
output  [3:0] B_local_14_address0;
output   B_local_14_ce0;
output   B_local_14_we0;
output  [31:0] B_local_14_d0;
output  [3:0] B_local_15_address0;
output   B_local_15_ce0;
output   B_local_15_we0;
output  [31:0] B_local_15_d0;
output  [3:0] A_local_address0;
output   A_local_ce0;
output   A_local_we0;
output  [31:0] A_local_d0;
output  [3:0] A_local_1_address0;
output   A_local_1_ce0;
output   A_local_1_we0;
output  [31:0] A_local_1_d0;
output  [3:0] A_local_2_address0;
output   A_local_2_ce0;
output   A_local_2_we0;
output  [31:0] A_local_2_d0;
output  [3:0] A_local_3_address0;
output   A_local_3_ce0;
output   A_local_3_we0;
output  [31:0] A_local_3_d0;
output  [3:0] A_local_4_address0;
output   A_local_4_ce0;
output   A_local_4_we0;
output  [31:0] A_local_4_d0;
output  [3:0] A_local_5_address0;
output   A_local_5_ce0;
output   A_local_5_we0;
output  [31:0] A_local_5_d0;
output  [3:0] A_local_6_address0;
output   A_local_6_ce0;
output   A_local_6_we0;
output  [31:0] A_local_6_d0;
output  [3:0] A_local_7_address0;
output   A_local_7_ce0;
output   A_local_7_we0;
output  [31:0] A_local_7_d0;
output  [3:0] A_local_8_address0;
output   A_local_8_ce0;
output   A_local_8_we0;
output  [31:0] A_local_8_d0;
output  [3:0] A_local_9_address0;
output   A_local_9_ce0;
output   A_local_9_we0;
output  [31:0] A_local_9_d0;
output  [3:0] A_local_10_address0;
output   A_local_10_ce0;
output   A_local_10_we0;
output  [31:0] A_local_10_d0;
output  [3:0] A_local_11_address0;
output   A_local_11_ce0;
output   A_local_11_we0;
output  [31:0] A_local_11_d0;
output  [3:0] A_local_12_address0;
output   A_local_12_ce0;
output   A_local_12_we0;
output  [31:0] A_local_12_d0;
output  [3:0] A_local_13_address0;
output   A_local_13_ce0;
output   A_local_13_we0;
output  [31:0] A_local_13_d0;
output  [3:0] A_local_14_address0;
output   A_local_14_ce0;
output   A_local_14_we0;
output  [31:0] A_local_14_d0;
output  [3:0] A_local_15_address0;
output   A_local_15_ce0;
output   A_local_15_we0;
output  [31:0] A_local_15_d0;
output  [3:0] AB_local_1_address0;
output   AB_local_1_ce0;
output   AB_local_1_we0;
output  [31:0] AB_local_1_d0;
output  [3:0] AB_local_2_address0;
output   AB_local_2_ce0;
output   AB_local_2_we0;
output  [31:0] AB_local_2_d0;
output  [3:0] AB_local_3_address0;
output   AB_local_3_ce0;
output   AB_local_3_we0;
output  [31:0] AB_local_3_d0;
output  [3:0] AB_local_4_address0;
output   AB_local_4_ce0;
output   AB_local_4_we0;
output  [31:0] AB_local_4_d0;
output  [3:0] AB_local_5_address0;
output   AB_local_5_ce0;
output   AB_local_5_we0;
output  [31:0] AB_local_5_d0;
output  [3:0] AB_local_6_address0;
output   AB_local_6_ce0;
output   AB_local_6_we0;
output  [31:0] AB_local_6_d0;
output  [3:0] AB_local_7_address0;
output   AB_local_7_ce0;
output   AB_local_7_we0;
output  [31:0] AB_local_7_d0;
output  [3:0] AB_local_8_address0;
output   AB_local_8_ce0;
output   AB_local_8_we0;
output  [31:0] AB_local_8_d0;
output  [3:0] AB_local_9_address0;
output   AB_local_9_ce0;
output   AB_local_9_we0;
output  [31:0] AB_local_9_d0;
output  [3:0] AB_local_10_address0;
output   AB_local_10_ce0;
output   AB_local_10_we0;
output  [31:0] AB_local_10_d0;
output  [3:0] AB_local_11_address0;
output   AB_local_11_ce0;
output   AB_local_11_we0;
output  [31:0] AB_local_11_d0;
output  [3:0] AB_local_12_address0;
output   AB_local_12_ce0;
output   AB_local_12_we0;
output  [31:0] AB_local_12_d0;
output  [3:0] AB_local_13_address0;
output   AB_local_13_ce0;
output   AB_local_13_we0;
output  [31:0] AB_local_13_d0;
output  [3:0] AB_local_14_address0;
output   AB_local_14_ce0;
output   AB_local_14_we0;
output  [31:0] AB_local_14_d0;
output  [3:0] AB_local_15_address0;
output   AB_local_15_ce0;
output   AB_local_15_we0;
output  [31:0] AB_local_15_d0;

reg ap_idle;
reg m_axi_dataA_RREADY;
reg m_axi_dataB_RREADY;
reg AB_local_ce0;
reg AB_local_we0;
reg B_local_ce0;
reg B_local_we0;
reg B_local_1_ce0;
reg B_local_1_we0;
reg B_local_2_ce0;
reg B_local_2_we0;
reg B_local_3_ce0;
reg B_local_3_we0;
reg B_local_4_ce0;
reg B_local_4_we0;
reg B_local_5_ce0;
reg B_local_5_we0;
reg B_local_6_ce0;
reg B_local_6_we0;
reg B_local_7_ce0;
reg B_local_7_we0;
reg B_local_8_ce0;
reg B_local_8_we0;
reg B_local_9_ce0;
reg B_local_9_we0;
reg B_local_10_ce0;
reg B_local_10_we0;
reg B_local_11_ce0;
reg B_local_11_we0;
reg B_local_12_ce0;
reg B_local_12_we0;
reg B_local_13_ce0;
reg B_local_13_we0;
reg B_local_14_ce0;
reg B_local_14_we0;
reg B_local_15_ce0;
reg B_local_15_we0;
reg A_local_ce0;
reg A_local_we0;
reg A_local_1_ce0;
reg A_local_1_we0;
reg A_local_2_ce0;
reg A_local_2_we0;
reg A_local_3_ce0;
reg A_local_3_we0;
reg A_local_4_ce0;
reg A_local_4_we0;
reg A_local_5_ce0;
reg A_local_5_we0;
reg A_local_6_ce0;
reg A_local_6_we0;
reg A_local_7_ce0;
reg A_local_7_we0;
reg A_local_8_ce0;
reg A_local_8_we0;
reg A_local_9_ce0;
reg A_local_9_we0;
reg A_local_10_ce0;
reg A_local_10_we0;
reg A_local_11_ce0;
reg A_local_11_we0;
reg A_local_12_ce0;
reg A_local_12_we0;
reg A_local_13_ce0;
reg A_local_13_we0;
reg A_local_14_ce0;
reg A_local_14_we0;
reg A_local_15_ce0;
reg A_local_15_we0;
reg AB_local_1_ce0;
reg AB_local_1_we0;
reg AB_local_2_ce0;
reg AB_local_2_we0;
reg AB_local_3_ce0;
reg AB_local_3_we0;
reg AB_local_4_ce0;
reg AB_local_4_we0;
reg AB_local_5_ce0;
reg AB_local_5_we0;
reg AB_local_6_ce0;
reg AB_local_6_we0;
reg AB_local_7_ce0;
reg AB_local_7_we0;
reg AB_local_8_ce0;
reg AB_local_8_we0;
reg AB_local_9_ce0;
reg AB_local_9_we0;
reg AB_local_10_ce0;
reg AB_local_10_we0;
reg AB_local_11_ce0;
reg AB_local_11_we0;
reg AB_local_12_ce0;
reg AB_local_12_we0;
reg AB_local_13_ce0;
reg AB_local_13_we0;
reg AB_local_14_ce0;
reg AB_local_14_we0;
reg AB_local_15_ce0;
reg AB_local_15_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln25_reg_1072;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln25_fu_892_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    dataB_blk_n_R;
wire    ap_block_pp0_stage0;
reg    dataA_blk_n_R;
reg    ap_block_pp0_stage0_11001;
wire   [4:0] select_ln25_fu_916_p3;
reg   [4:0] select_ln25_reg_1076;
reg   [4:0] select_ln25_reg_1076_pp0_iter1_reg;
wire   [63:0] zext_ln25_fu_938_p1;
reg   [63:0] zext_ln25_reg_1081;
reg   [63:0] zext_ln25_reg_1081_pp0_iter1_reg;
wire   [3:0] trunc_ln25_fu_958_p1;
reg   [3:0] trunc_ln25_reg_1101;
reg   [3:0] trunc_ln25_reg_1101_pp0_iter1_reg;
wire   [3:0] trunc_ln26_fu_962_p1;
reg   [3:0] trunc_ln26_reg_1105;
reg   [3:0] trunc_ln26_reg_1105_pp0_iter1_reg;
wire   [31:0] bitcast_ln27_fu_999_p1;
reg   [31:0] bitcast_ln27_reg_1109;
reg   [31:0] dataB_addr_read_reg_1129;
reg    ap_condition_exit_pp0_iter1_stage0;
wire   [63:0] j_cast_fu_1003_p1;
reg   [4:0] j_fu_192;
wire   [4:0] add_ln26_fu_966_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_load;
reg   [4:0] i_fu_196;
wire   [4:0] select_ln25_1_fu_930_p3;
reg   [4:0] ap_sig_allocacmp_i_load;
reg   [8:0] indvar_flatten_fu_200;
wire   [8:0] add_ln25_fu_898_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [31:0] bitcast_ln28_fu_1022_p1;
wire   [0:0] icmp_ln26_fu_910_p2;
wire   [4:0] add_ln25_1_fu_924_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

matmul_optimized_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln25_fu_892_p2 == 1'd0))) begin
            i_fu_196 <= select_ln25_1_fu_930_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_196 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln25_fu_892_p2 == 1'd0))) begin
            indvar_flatten_fu_200 <= add_ln25_fu_898_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_200 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln25_fu_892_p2 == 1'd0))) begin
            j_fu_192 <= add_ln26_fu_966_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_192 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln25_reg_1072 <= icmp_ln25_fu_892_p2;
        select_ln25_reg_1076_pp0_iter1_reg <= select_ln25_reg_1076;
        trunc_ln25_reg_1101_pp0_iter1_reg <= trunc_ln25_reg_1101;
        trunc_ln26_reg_1105_pp0_iter1_reg <= trunc_ln26_reg_1105;
        zext_ln25_reg_1081_pp0_iter1_reg[4 : 0] <= zext_ln25_reg_1081[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_1072 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bitcast_ln27_reg_1109 <= bitcast_ln27_fu_999_p1;
        dataB_addr_read_reg_1129 <= m_axi_dataB_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln25_reg_1076 <= select_ln25_fu_916_p3;
        trunc_ln25_reg_1101 <= trunc_ln25_fu_958_p1;
        trunc_ln26_reg_1105 <= trunc_ln26_fu_962_p1;
        zext_ln25_reg_1081[4 : 0] <= zext_ln25_fu_938_p1[4 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_10_ce0 = 1'b1;
    end else begin
        AB_local_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_10_we0 = 1'b1;
    end else begin
        AB_local_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_11_ce0 = 1'b1;
    end else begin
        AB_local_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_11_we0 = 1'b1;
    end else begin
        AB_local_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_12_ce0 = 1'b1;
    end else begin
        AB_local_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_12_we0 = 1'b1;
    end else begin
        AB_local_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_13_ce0 = 1'b1;
    end else begin
        AB_local_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_13_we0 = 1'b1;
    end else begin
        AB_local_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_14_ce0 = 1'b1;
    end else begin
        AB_local_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_14_we0 = 1'b1;
    end else begin
        AB_local_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_15_ce0 = 1'b1;
    end else begin
        AB_local_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_15_we0 = 1'b1;
    end else begin
        AB_local_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_1_ce0 = 1'b1;
    end else begin
        AB_local_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_1_we0 = 1'b1;
    end else begin
        AB_local_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_2_ce0 = 1'b1;
    end else begin
        AB_local_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_2_we0 = 1'b1;
    end else begin
        AB_local_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_3_ce0 = 1'b1;
    end else begin
        AB_local_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_3_we0 = 1'b1;
    end else begin
        AB_local_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_4_ce0 = 1'b1;
    end else begin
        AB_local_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_4_we0 = 1'b1;
    end else begin
        AB_local_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_5_ce0 = 1'b1;
    end else begin
        AB_local_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_5_we0 = 1'b1;
    end else begin
        AB_local_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_6_ce0 = 1'b1;
    end else begin
        AB_local_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_6_we0 = 1'b1;
    end else begin
        AB_local_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_7_ce0 = 1'b1;
    end else begin
        AB_local_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_7_we0 = 1'b1;
    end else begin
        AB_local_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_8_ce0 = 1'b1;
    end else begin
        AB_local_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_8_we0 = 1'b1;
    end else begin
        AB_local_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_9_ce0 = 1'b1;
    end else begin
        AB_local_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_9_we0 = 1'b1;
    end else begin
        AB_local_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_ce0 = 1'b1;
    end else begin
        AB_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_fu_962_p1 == 4'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        AB_local_we0 = 1'b1;
    end else begin
        AB_local_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_10_ce0 = 1'b1;
    end else begin
        A_local_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd10) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_10_we0 = 1'b1;
    end else begin
        A_local_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_11_ce0 = 1'b1;
    end else begin
        A_local_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_11_we0 = 1'b1;
    end else begin
        A_local_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_12_ce0 = 1'b1;
    end else begin
        A_local_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd12) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_12_we0 = 1'b1;
    end else begin
        A_local_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_13_ce0 = 1'b1;
    end else begin
        A_local_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd13) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_13_we0 = 1'b1;
    end else begin
        A_local_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_14_ce0 = 1'b1;
    end else begin
        A_local_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd14) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_14_we0 = 1'b1;
    end else begin
        A_local_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_15_ce0 = 1'b1;
    end else begin
        A_local_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd15) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_15_we0 = 1'b1;
    end else begin
        A_local_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_1_ce0 = 1'b1;
    end else begin
        A_local_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_1_we0 = 1'b1;
    end else begin
        A_local_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_2_ce0 = 1'b1;
    end else begin
        A_local_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_2_we0 = 1'b1;
    end else begin
        A_local_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_3_ce0 = 1'b1;
    end else begin
        A_local_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_3_we0 = 1'b1;
    end else begin
        A_local_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_4_ce0 = 1'b1;
    end else begin
        A_local_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_4_we0 = 1'b1;
    end else begin
        A_local_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_5_ce0 = 1'b1;
    end else begin
        A_local_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_5_we0 = 1'b1;
    end else begin
        A_local_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_6_ce0 = 1'b1;
    end else begin
        A_local_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_6_we0 = 1'b1;
    end else begin
        A_local_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_7_ce0 = 1'b1;
    end else begin
        A_local_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_7_we0 = 1'b1;
    end else begin
        A_local_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_8_ce0 = 1'b1;
    end else begin
        A_local_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd8) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_8_we0 = 1'b1;
    end else begin
        A_local_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_9_ce0 = 1'b1;
    end else begin
        A_local_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_9_we0 = 1'b1;
    end else begin
        A_local_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_ce0 = 1'b1;
    end else begin
        A_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln26_reg_1105_pp0_iter1_reg == 4'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_local_we0 = 1'b1;
    end else begin
        A_local_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_10_ce0 = 1'b1;
    end else begin
        B_local_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd10) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_10_we0 = 1'b1;
    end else begin
        B_local_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_11_ce0 = 1'b1;
    end else begin
        B_local_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_11_we0 = 1'b1;
    end else begin
        B_local_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_12_ce0 = 1'b1;
    end else begin
        B_local_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd12) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_12_we0 = 1'b1;
    end else begin
        B_local_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_13_ce0 = 1'b1;
    end else begin
        B_local_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd13) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_13_we0 = 1'b1;
    end else begin
        B_local_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_14_ce0 = 1'b1;
    end else begin
        B_local_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd14) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_14_we0 = 1'b1;
    end else begin
        B_local_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_15_ce0 = 1'b1;
    end else begin
        B_local_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd15) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_15_we0 = 1'b1;
    end else begin
        B_local_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_1_ce0 = 1'b1;
    end else begin
        B_local_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_1_we0 = 1'b1;
    end else begin
        B_local_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_2_ce0 = 1'b1;
    end else begin
        B_local_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_2_we0 = 1'b1;
    end else begin
        B_local_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_3_ce0 = 1'b1;
    end else begin
        B_local_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_3_we0 = 1'b1;
    end else begin
        B_local_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_4_ce0 = 1'b1;
    end else begin
        B_local_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_4_we0 = 1'b1;
    end else begin
        B_local_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_5_ce0 = 1'b1;
    end else begin
        B_local_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_5_we0 = 1'b1;
    end else begin
        B_local_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_6_ce0 = 1'b1;
    end else begin
        B_local_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_6_we0 = 1'b1;
    end else begin
        B_local_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_7_ce0 = 1'b1;
    end else begin
        B_local_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_7_we0 = 1'b1;
    end else begin
        B_local_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_8_ce0 = 1'b1;
    end else begin
        B_local_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd8) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_8_we0 = 1'b1;
    end else begin
        B_local_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_9_ce0 = 1'b1;
    end else begin
        B_local_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_9_we0 = 1'b1;
    end else begin
        B_local_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_ce0 = 1'b1;
    end else begin
        B_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln25_reg_1101_pp0_iter1_reg == 4'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_local_we0 = 1'b1;
    end else begin
        B_local_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln25_fu_892_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1072 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_196;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_200;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 5'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_192;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1072 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        dataA_blk_n_R = m_axi_dataA_RVALID;
    end else begin
        dataA_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1072 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        dataB_blk_n_R = m_axi_dataB_RVALID;
    end else begin
        dataB_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1072 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_dataA_RREADY = 1'b1;
    end else begin
        m_axi_dataA_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_1072 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_dataB_RREADY = 1'b1;
    end else begin
        m_axi_dataB_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AB_local_10_address0 = zext_ln25_fu_938_p1;

assign AB_local_10_d0 = 32'd0;

assign AB_local_11_address0 = zext_ln25_fu_938_p1;

assign AB_local_11_d0 = 32'd0;

assign AB_local_12_address0 = zext_ln25_fu_938_p1;

assign AB_local_12_d0 = 32'd0;

assign AB_local_13_address0 = zext_ln25_fu_938_p1;

assign AB_local_13_d0 = 32'd0;

assign AB_local_14_address0 = zext_ln25_fu_938_p1;

assign AB_local_14_d0 = 32'd0;

assign AB_local_15_address0 = zext_ln25_fu_938_p1;

assign AB_local_15_d0 = 32'd0;

assign AB_local_1_address0 = zext_ln25_fu_938_p1;

assign AB_local_1_d0 = 32'd0;

assign AB_local_2_address0 = zext_ln25_fu_938_p1;

assign AB_local_2_d0 = 32'd0;

assign AB_local_3_address0 = zext_ln25_fu_938_p1;

assign AB_local_3_d0 = 32'd0;

assign AB_local_4_address0 = zext_ln25_fu_938_p1;

assign AB_local_4_d0 = 32'd0;

assign AB_local_5_address0 = zext_ln25_fu_938_p1;

assign AB_local_5_d0 = 32'd0;

assign AB_local_6_address0 = zext_ln25_fu_938_p1;

assign AB_local_6_d0 = 32'd0;

assign AB_local_7_address0 = zext_ln25_fu_938_p1;

assign AB_local_7_d0 = 32'd0;

assign AB_local_8_address0 = zext_ln25_fu_938_p1;

assign AB_local_8_d0 = 32'd0;

assign AB_local_9_address0 = zext_ln25_fu_938_p1;

assign AB_local_9_d0 = 32'd0;

assign AB_local_address0 = zext_ln25_fu_938_p1;

assign AB_local_d0 = 32'd0;

assign A_local_10_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_10_d0 = bitcast_ln27_reg_1109;

assign A_local_11_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_11_d0 = bitcast_ln27_reg_1109;

assign A_local_12_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_12_d0 = bitcast_ln27_reg_1109;

assign A_local_13_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_13_d0 = bitcast_ln27_reg_1109;

assign A_local_14_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_14_d0 = bitcast_ln27_reg_1109;

assign A_local_15_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_15_d0 = bitcast_ln27_reg_1109;

assign A_local_1_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_1_d0 = bitcast_ln27_reg_1109;

assign A_local_2_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_2_d0 = bitcast_ln27_reg_1109;

assign A_local_3_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_3_d0 = bitcast_ln27_reg_1109;

assign A_local_4_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_4_d0 = bitcast_ln27_reg_1109;

assign A_local_5_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_5_d0 = bitcast_ln27_reg_1109;

assign A_local_6_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_6_d0 = bitcast_ln27_reg_1109;

assign A_local_7_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_7_d0 = bitcast_ln27_reg_1109;

assign A_local_8_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_8_d0 = bitcast_ln27_reg_1109;

assign A_local_9_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_9_d0 = bitcast_ln27_reg_1109;

assign A_local_address0 = zext_ln25_reg_1081_pp0_iter1_reg;

assign A_local_d0 = bitcast_ln27_reg_1109;

assign B_local_10_address0 = j_cast_fu_1003_p1;

assign B_local_10_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_11_address0 = j_cast_fu_1003_p1;

assign B_local_11_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_12_address0 = j_cast_fu_1003_p1;

assign B_local_12_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_13_address0 = j_cast_fu_1003_p1;

assign B_local_13_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_14_address0 = j_cast_fu_1003_p1;

assign B_local_14_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_15_address0 = j_cast_fu_1003_p1;

assign B_local_15_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_1_address0 = j_cast_fu_1003_p1;

assign B_local_1_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_2_address0 = j_cast_fu_1003_p1;

assign B_local_2_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_3_address0 = j_cast_fu_1003_p1;

assign B_local_3_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_4_address0 = j_cast_fu_1003_p1;

assign B_local_4_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_5_address0 = j_cast_fu_1003_p1;

assign B_local_5_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_6_address0 = j_cast_fu_1003_p1;

assign B_local_6_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_7_address0 = j_cast_fu_1003_p1;

assign B_local_7_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_8_address0 = j_cast_fu_1003_p1;

assign B_local_8_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_9_address0 = j_cast_fu_1003_p1;

assign B_local_9_d0 = bitcast_ln28_fu_1022_p1;

assign B_local_address0 = j_cast_fu_1003_p1;

assign B_local_d0 = bitcast_ln28_fu_1022_p1;

assign add_ln25_1_fu_924_p2 = (ap_sig_allocacmp_i_load + 5'd1);

assign add_ln25_fu_898_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign add_ln26_fu_966_p2 = (select_ln25_fu_916_p3 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_reg_1072 == 1'd0) & (m_axi_dataA_RVALID == 1'b0)) | ((icmp_ln25_reg_1072 == 1'd0) & (m_axi_dataB_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln25_reg_1072 == 1'd0) & (m_axi_dataA_RVALID == 1'b0)) | ((icmp_ln25_reg_1072 == 1'd0) & (m_axi_dataB_RVALID == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((icmp_ln25_reg_1072 == 1'd0) & (m_axi_dataA_RVALID == 1'b0)) | ((icmp_ln25_reg_1072 == 1'd0) & (m_axi_dataB_RVALID == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln27_fu_999_p1 = m_axi_dataA_RDATA;

assign bitcast_ln28_fu_1022_p1 = dataB_addr_read_reg_1129;

assign icmp_ln25_fu_892_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_910_p2 = ((ap_sig_allocacmp_j_load == 5'd16) ? 1'b1 : 1'b0);

assign j_cast_fu_1003_p1 = select_ln25_reg_1076_pp0_iter1_reg;

assign m_axi_dataA_ARADDR = 64'd0;

assign m_axi_dataA_ARBURST = 2'd0;

assign m_axi_dataA_ARCACHE = 4'd0;

assign m_axi_dataA_ARID = 1'd0;

assign m_axi_dataA_ARLEN = 32'd0;

assign m_axi_dataA_ARLOCK = 2'd0;

assign m_axi_dataA_ARPROT = 3'd0;

assign m_axi_dataA_ARQOS = 4'd0;

assign m_axi_dataA_ARREGION = 4'd0;

assign m_axi_dataA_ARSIZE = 3'd0;

assign m_axi_dataA_ARUSER = 1'd0;

assign m_axi_dataA_ARVALID = 1'b0;

assign m_axi_dataA_AWADDR = 64'd0;

assign m_axi_dataA_AWBURST = 2'd0;

assign m_axi_dataA_AWCACHE = 4'd0;

assign m_axi_dataA_AWID = 1'd0;

assign m_axi_dataA_AWLEN = 32'd0;

assign m_axi_dataA_AWLOCK = 2'd0;

assign m_axi_dataA_AWPROT = 3'd0;

assign m_axi_dataA_AWQOS = 4'd0;

assign m_axi_dataA_AWREGION = 4'd0;

assign m_axi_dataA_AWSIZE = 3'd0;

assign m_axi_dataA_AWUSER = 1'd0;

assign m_axi_dataA_AWVALID = 1'b0;

assign m_axi_dataA_BREADY = 1'b0;

assign m_axi_dataA_WDATA = 32'd0;

assign m_axi_dataA_WID = 1'd0;

assign m_axi_dataA_WLAST = 1'b0;

assign m_axi_dataA_WSTRB = 4'd0;

assign m_axi_dataA_WUSER = 1'd0;

assign m_axi_dataA_WVALID = 1'b0;

assign m_axi_dataB_ARADDR = 64'd0;

assign m_axi_dataB_ARBURST = 2'd0;

assign m_axi_dataB_ARCACHE = 4'd0;

assign m_axi_dataB_ARID = 1'd0;

assign m_axi_dataB_ARLEN = 32'd0;

assign m_axi_dataB_ARLOCK = 2'd0;

assign m_axi_dataB_ARPROT = 3'd0;

assign m_axi_dataB_ARQOS = 4'd0;

assign m_axi_dataB_ARREGION = 4'd0;

assign m_axi_dataB_ARSIZE = 3'd0;

assign m_axi_dataB_ARUSER = 1'd0;

assign m_axi_dataB_ARVALID = 1'b0;

assign m_axi_dataB_AWADDR = 64'd0;

assign m_axi_dataB_AWBURST = 2'd0;

assign m_axi_dataB_AWCACHE = 4'd0;

assign m_axi_dataB_AWID = 1'd0;

assign m_axi_dataB_AWLEN = 32'd0;

assign m_axi_dataB_AWLOCK = 2'd0;

assign m_axi_dataB_AWPROT = 3'd0;

assign m_axi_dataB_AWQOS = 4'd0;

assign m_axi_dataB_AWREGION = 4'd0;

assign m_axi_dataB_AWSIZE = 3'd0;

assign m_axi_dataB_AWUSER = 1'd0;

assign m_axi_dataB_AWVALID = 1'b0;

assign m_axi_dataB_BREADY = 1'b0;

assign m_axi_dataB_WDATA = 32'd0;

assign m_axi_dataB_WID = 1'd0;

assign m_axi_dataB_WLAST = 1'b0;

assign m_axi_dataB_WSTRB = 4'd0;

assign m_axi_dataB_WUSER = 1'd0;

assign m_axi_dataB_WVALID = 1'b0;

assign select_ln25_1_fu_930_p3 = ((icmp_ln26_fu_910_p2[0:0] == 1'b1) ? add_ln25_1_fu_924_p2 : ap_sig_allocacmp_i_load);

assign select_ln25_fu_916_p3 = ((icmp_ln26_fu_910_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_j_load);

assign trunc_ln25_fu_958_p1 = select_ln25_1_fu_930_p3[3:0];

assign trunc_ln26_fu_962_p1 = select_ln25_fu_916_p3[3:0];

assign zext_ln25_fu_938_p1 = select_ln25_1_fu_930_p3;

always @ (posedge ap_clk) begin
    zext_ln25_reg_1081[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln25_reg_1081_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //matmul_optimized_matmul_optimized_Pipeline_VITIS_LOOP_25_1_VITIS_LOOP_26_2
