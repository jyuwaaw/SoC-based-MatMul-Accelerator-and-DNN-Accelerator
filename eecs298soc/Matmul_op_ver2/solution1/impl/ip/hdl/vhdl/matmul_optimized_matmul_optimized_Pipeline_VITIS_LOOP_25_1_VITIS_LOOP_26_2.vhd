-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_optimized_matmul_optimized_Pipeline_VITIS_LOOP_25_1_VITIS_LOOP_26_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_dataA_AWVALID : OUT STD_LOGIC;
    m_axi_dataA_AWREADY : IN STD_LOGIC;
    m_axi_dataA_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dataA_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataA_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dataA_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dataA_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataA_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataA_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataA_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dataA_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataA_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataA_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataA_WVALID : OUT STD_LOGIC;
    m_axi_dataA_WREADY : IN STD_LOGIC;
    m_axi_dataA_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dataA_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataA_WLAST : OUT STD_LOGIC;
    m_axi_dataA_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataA_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataA_ARVALID : OUT STD_LOGIC;
    m_axi_dataA_ARREADY : IN STD_LOGIC;
    m_axi_dataA_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dataA_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataA_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dataA_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dataA_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataA_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataA_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataA_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dataA_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataA_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataA_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataA_RVALID : IN STD_LOGIC;
    m_axi_dataA_RREADY : OUT STD_LOGIC;
    m_axi_dataA_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dataA_RLAST : IN STD_LOGIC;
    m_axi_dataA_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataA_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_dataA_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataA_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataA_BVALID : IN STD_LOGIC;
    m_axi_dataA_BREADY : OUT STD_LOGIC;
    m_axi_dataA_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataA_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataA_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataB_AWVALID : OUT STD_LOGIC;
    m_axi_dataB_AWREADY : IN STD_LOGIC;
    m_axi_dataB_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dataB_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataB_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dataB_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dataB_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataB_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataB_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataB_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dataB_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataB_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataB_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataB_WVALID : OUT STD_LOGIC;
    m_axi_dataB_WREADY : IN STD_LOGIC;
    m_axi_dataB_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dataB_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataB_WLAST : OUT STD_LOGIC;
    m_axi_dataB_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataB_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataB_ARVALID : OUT STD_LOGIC;
    m_axi_dataB_ARREADY : IN STD_LOGIC;
    m_axi_dataB_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dataB_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataB_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dataB_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dataB_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataB_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataB_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataB_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dataB_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataB_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dataB_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataB_RVALID : IN STD_LOGIC;
    m_axi_dataB_RREADY : OUT STD_LOGIC;
    m_axi_dataB_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dataB_RLAST : IN STD_LOGIC;
    m_axi_dataB_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataB_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_dataB_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataB_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataB_BVALID : IN STD_LOGIC;
    m_axi_dataB_BREADY : OUT STD_LOGIC;
    m_axi_dataB_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dataB_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dataB_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln25 : IN STD_LOGIC_VECTOR (61 downto 0);
    sext_ln25_1 : IN STD_LOGIC_VECTOR (61 downto 0);
    AB_local_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_ce0 : OUT STD_LOGIC;
    AB_local_we0 : OUT STD_LOGIC;
    AB_local_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_ce0 : OUT STD_LOGIC;
    B_local_we0 : OUT STD_LOGIC;
    B_local_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_1_ce0 : OUT STD_LOGIC;
    B_local_1_we0 : OUT STD_LOGIC;
    B_local_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_2_ce0 : OUT STD_LOGIC;
    B_local_2_we0 : OUT STD_LOGIC;
    B_local_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_3_ce0 : OUT STD_LOGIC;
    B_local_3_we0 : OUT STD_LOGIC;
    B_local_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_4_ce0 : OUT STD_LOGIC;
    B_local_4_we0 : OUT STD_LOGIC;
    B_local_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_5_ce0 : OUT STD_LOGIC;
    B_local_5_we0 : OUT STD_LOGIC;
    B_local_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_6_ce0 : OUT STD_LOGIC;
    B_local_6_we0 : OUT STD_LOGIC;
    B_local_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_7_ce0 : OUT STD_LOGIC;
    B_local_7_we0 : OUT STD_LOGIC;
    B_local_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_8_ce0 : OUT STD_LOGIC;
    B_local_8_we0 : OUT STD_LOGIC;
    B_local_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_9_ce0 : OUT STD_LOGIC;
    B_local_9_we0 : OUT STD_LOGIC;
    B_local_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_10_ce0 : OUT STD_LOGIC;
    B_local_10_we0 : OUT STD_LOGIC;
    B_local_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_11_ce0 : OUT STD_LOGIC;
    B_local_11_we0 : OUT STD_LOGIC;
    B_local_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_12_ce0 : OUT STD_LOGIC;
    B_local_12_we0 : OUT STD_LOGIC;
    B_local_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_13_ce0 : OUT STD_LOGIC;
    B_local_13_we0 : OUT STD_LOGIC;
    B_local_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_14_ce0 : OUT STD_LOGIC;
    B_local_14_we0 : OUT STD_LOGIC;
    B_local_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_local_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_local_15_ce0 : OUT STD_LOGIC;
    B_local_15_we0 : OUT STD_LOGIC;
    B_local_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_ce0 : OUT STD_LOGIC;
    A_local_we0 : OUT STD_LOGIC;
    A_local_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_1_ce0 : OUT STD_LOGIC;
    A_local_1_we0 : OUT STD_LOGIC;
    A_local_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_2_ce0 : OUT STD_LOGIC;
    A_local_2_we0 : OUT STD_LOGIC;
    A_local_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_3_ce0 : OUT STD_LOGIC;
    A_local_3_we0 : OUT STD_LOGIC;
    A_local_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_4_ce0 : OUT STD_LOGIC;
    A_local_4_we0 : OUT STD_LOGIC;
    A_local_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_5_ce0 : OUT STD_LOGIC;
    A_local_5_we0 : OUT STD_LOGIC;
    A_local_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_6_ce0 : OUT STD_LOGIC;
    A_local_6_we0 : OUT STD_LOGIC;
    A_local_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_7_ce0 : OUT STD_LOGIC;
    A_local_7_we0 : OUT STD_LOGIC;
    A_local_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_8_ce0 : OUT STD_LOGIC;
    A_local_8_we0 : OUT STD_LOGIC;
    A_local_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_9_ce0 : OUT STD_LOGIC;
    A_local_9_we0 : OUT STD_LOGIC;
    A_local_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_10_ce0 : OUT STD_LOGIC;
    A_local_10_we0 : OUT STD_LOGIC;
    A_local_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_11_ce0 : OUT STD_LOGIC;
    A_local_11_we0 : OUT STD_LOGIC;
    A_local_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_12_ce0 : OUT STD_LOGIC;
    A_local_12_we0 : OUT STD_LOGIC;
    A_local_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_13_ce0 : OUT STD_LOGIC;
    A_local_13_we0 : OUT STD_LOGIC;
    A_local_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_14_ce0 : OUT STD_LOGIC;
    A_local_14_we0 : OUT STD_LOGIC;
    A_local_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_local_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_local_15_ce0 : OUT STD_LOGIC;
    A_local_15_we0 : OUT STD_LOGIC;
    A_local_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_1_ce0 : OUT STD_LOGIC;
    AB_local_1_we0 : OUT STD_LOGIC;
    AB_local_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_2_ce0 : OUT STD_LOGIC;
    AB_local_2_we0 : OUT STD_LOGIC;
    AB_local_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_3_ce0 : OUT STD_LOGIC;
    AB_local_3_we0 : OUT STD_LOGIC;
    AB_local_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_4_ce0 : OUT STD_LOGIC;
    AB_local_4_we0 : OUT STD_LOGIC;
    AB_local_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_5_ce0 : OUT STD_LOGIC;
    AB_local_5_we0 : OUT STD_LOGIC;
    AB_local_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_6_ce0 : OUT STD_LOGIC;
    AB_local_6_we0 : OUT STD_LOGIC;
    AB_local_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_7_ce0 : OUT STD_LOGIC;
    AB_local_7_we0 : OUT STD_LOGIC;
    AB_local_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_8_ce0 : OUT STD_LOGIC;
    AB_local_8_we0 : OUT STD_LOGIC;
    AB_local_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_9_ce0 : OUT STD_LOGIC;
    AB_local_9_we0 : OUT STD_LOGIC;
    AB_local_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_10_ce0 : OUT STD_LOGIC;
    AB_local_10_we0 : OUT STD_LOGIC;
    AB_local_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_11_ce0 : OUT STD_LOGIC;
    AB_local_11_we0 : OUT STD_LOGIC;
    AB_local_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_12_ce0 : OUT STD_LOGIC;
    AB_local_12_we0 : OUT STD_LOGIC;
    AB_local_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_13_ce0 : OUT STD_LOGIC;
    AB_local_13_we0 : OUT STD_LOGIC;
    AB_local_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_14_ce0 : OUT STD_LOGIC;
    AB_local_14_we0 : OUT STD_LOGIC;
    AB_local_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    AB_local_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    AB_local_15_ce0 : OUT STD_LOGIC;
    AB_local_15_we0 : OUT STD_LOGIC;
    AB_local_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of matmul_optimized_matmul_optimized_Pipeline_VITIS_LOOP_25_1_VITIS_LOOP_26_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln25_reg_1072 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln25_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal dataB_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal dataA_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln25_fu_916_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln25_reg_1076 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln25_reg_1076_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln25_fu_938_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln25_reg_1081 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln25_reg_1081_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln25_fu_958_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln25_reg_1101 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln25_reg_1101_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln26_fu_962_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln26_reg_1105 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln26_reg_1105_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal bitcast_ln27_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln27_reg_1109 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataB_addr_read_reg_1129 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal j_cast_fu_1003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_192 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln26_fu_966_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (4 downto 0);
    signal i_fu_196 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln25_1_fu_930_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_200 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln25_fu_898_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (8 downto 0);
    signal bitcast_ln28_fu_1022_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln26_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln25_1_fu_924_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component matmul_optimized_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component matmul_optimized_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0))) then 
                    i_fu_196 <= select_ln25_1_fu_930_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_196 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_200 <= add_ln25_fu_898_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_200 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0))) then 
                    j_fu_192 <= add_ln26_fu_966_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_192 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln25_reg_1072 <= icmp_ln25_fu_892_p2;
                select_ln25_reg_1076_pp0_iter1_reg <= select_ln25_reg_1076;
                trunc_ln25_reg_1101_pp0_iter1_reg <= trunc_ln25_reg_1101;
                trunc_ln26_reg_1105_pp0_iter1_reg <= trunc_ln26_reg_1105;
                    zext_ln25_reg_1081_pp0_iter1_reg(4 downto 0) <= zext_ln25_reg_1081(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_1072 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                bitcast_ln27_reg_1109 <= bitcast_ln27_fu_999_p1;
                dataB_addr_read_reg_1129 <= m_axi_dataB_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln25_reg_1076 <= select_ln25_fu_916_p3;
                trunc_ln25_reg_1101 <= trunc_ln25_fu_958_p1;
                trunc_ln26_reg_1105 <= trunc_ln26_fu_962_p1;
                    zext_ln25_reg_1081(4 downto 0) <= zext_ln25_fu_938_p1(4 downto 0);
            end if;
        end if;
    end process;
    zext_ln25_reg_1081(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln25_reg_1081_pp0_iter1_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    AB_local_10_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_10_ce0 <= ap_const_logic_1;
        else 
            AB_local_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_10_d0 <= ap_const_lv32_0;

    AB_local_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_A) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_10_we0 <= ap_const_logic_1;
        else 
            AB_local_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_11_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_11_ce0 <= ap_const_logic_1;
        else 
            AB_local_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_11_d0 <= ap_const_lv32_0;

    AB_local_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_B) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_11_we0 <= ap_const_logic_1;
        else 
            AB_local_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_12_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_12_ce0 <= ap_const_logic_1;
        else 
            AB_local_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_12_d0 <= ap_const_lv32_0;

    AB_local_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_C) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_12_we0 <= ap_const_logic_1;
        else 
            AB_local_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_13_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_13_ce0 <= ap_const_logic_1;
        else 
            AB_local_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_13_d0 <= ap_const_lv32_0;

    AB_local_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_D) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_13_we0 <= ap_const_logic_1;
        else 
            AB_local_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_14_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_14_ce0 <= ap_const_logic_1;
        else 
            AB_local_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_14_d0 <= ap_const_lv32_0;

    AB_local_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_E) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_14_we0 <= ap_const_logic_1;
        else 
            AB_local_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_15_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_15_ce0 <= ap_const_logic_1;
        else 
            AB_local_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_15_d0 <= ap_const_lv32_0;

    AB_local_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_F) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_15_we0 <= ap_const_logic_1;
        else 
            AB_local_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_1_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_1_ce0 <= ap_const_logic_1;
        else 
            AB_local_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_1_d0 <= ap_const_lv32_0;

    AB_local_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_1_we0 <= ap_const_logic_1;
        else 
            AB_local_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_2_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_2_ce0 <= ap_const_logic_1;
        else 
            AB_local_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_2_d0 <= ap_const_lv32_0;

    AB_local_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_2_we0 <= ap_const_logic_1;
        else 
            AB_local_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_3_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_3_ce0 <= ap_const_logic_1;
        else 
            AB_local_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_3_d0 <= ap_const_lv32_0;

    AB_local_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_3_we0 <= ap_const_logic_1;
        else 
            AB_local_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_4_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_4_ce0 <= ap_const_logic_1;
        else 
            AB_local_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_4_d0 <= ap_const_lv32_0;

    AB_local_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_4_we0 <= ap_const_logic_1;
        else 
            AB_local_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_5_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_5_ce0 <= ap_const_logic_1;
        else 
            AB_local_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_5_d0 <= ap_const_lv32_0;

    AB_local_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_5_we0 <= ap_const_logic_1;
        else 
            AB_local_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_6_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_6_ce0 <= ap_const_logic_1;
        else 
            AB_local_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_6_d0 <= ap_const_lv32_0;

    AB_local_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_6_we0 <= ap_const_logic_1;
        else 
            AB_local_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_7_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_7_ce0 <= ap_const_logic_1;
        else 
            AB_local_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_7_d0 <= ap_const_lv32_0;

    AB_local_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_7_we0 <= ap_const_logic_1;
        else 
            AB_local_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_8_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_8_ce0 <= ap_const_logic_1;
        else 
            AB_local_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_8_d0 <= ap_const_lv32_0;

    AB_local_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_8_we0 <= ap_const_logic_1;
        else 
            AB_local_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_9_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_9_ce0 <= ap_const_logic_1;
        else 
            AB_local_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_9_d0 <= ap_const_lv32_0;

    AB_local_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_9_we0 <= ap_const_logic_1;
        else 
            AB_local_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_address0 <= zext_ln25_fu_938_p1(4 - 1 downto 0);

    AB_local_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_ce0 <= ap_const_logic_1;
        else 
            AB_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    AB_local_d0 <= ap_const_lv32_0;

    AB_local_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln25_fu_892_p2, ap_block_pp0_stage0_11001, trunc_ln26_fu_962_p1)
    begin
        if (((trunc_ln26_fu_962_p1 = ap_const_lv4_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            AB_local_we0 <= ap_const_logic_1;
        else 
            AB_local_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_10_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_10_ce0 <= ap_const_logic_1;
        else 
            A_local_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_10_d0 <= bitcast_ln27_reg_1109;

    A_local_10_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_A) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_10_we0 <= ap_const_logic_1;
        else 
            A_local_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_11_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_11_ce0 <= ap_const_logic_1;
        else 
            A_local_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_11_d0 <= bitcast_ln27_reg_1109;

    A_local_11_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_B) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_11_we0 <= ap_const_logic_1;
        else 
            A_local_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_12_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_12_ce0 <= ap_const_logic_1;
        else 
            A_local_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_12_d0 <= bitcast_ln27_reg_1109;

    A_local_12_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_12_we0 <= ap_const_logic_1;
        else 
            A_local_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_13_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_13_ce0 <= ap_const_logic_1;
        else 
            A_local_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_13_d0 <= bitcast_ln27_reg_1109;

    A_local_13_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_D) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_13_we0 <= ap_const_logic_1;
        else 
            A_local_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_14_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_14_ce0 <= ap_const_logic_1;
        else 
            A_local_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_14_d0 <= bitcast_ln27_reg_1109;

    A_local_14_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_E) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_14_we0 <= ap_const_logic_1;
        else 
            A_local_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_15_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_15_ce0 <= ap_const_logic_1;
        else 
            A_local_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_15_d0 <= bitcast_ln27_reg_1109;

    A_local_15_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_15_we0 <= ap_const_logic_1;
        else 
            A_local_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_1_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_1_ce0 <= ap_const_logic_1;
        else 
            A_local_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_1_d0 <= bitcast_ln27_reg_1109;

    A_local_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_1_we0 <= ap_const_logic_1;
        else 
            A_local_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_2_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_2_ce0 <= ap_const_logic_1;
        else 
            A_local_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_2_d0 <= bitcast_ln27_reg_1109;

    A_local_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_2_we0 <= ap_const_logic_1;
        else 
            A_local_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_3_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_3_ce0 <= ap_const_logic_1;
        else 
            A_local_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_3_d0 <= bitcast_ln27_reg_1109;

    A_local_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_3_we0 <= ap_const_logic_1;
        else 
            A_local_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_4_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_4_ce0 <= ap_const_logic_1;
        else 
            A_local_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_4_d0 <= bitcast_ln27_reg_1109;

    A_local_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_4_we0 <= ap_const_logic_1;
        else 
            A_local_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_5_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_5_ce0 <= ap_const_logic_1;
        else 
            A_local_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_5_d0 <= bitcast_ln27_reg_1109;

    A_local_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_5_we0 <= ap_const_logic_1;
        else 
            A_local_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_6_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_6_ce0 <= ap_const_logic_1;
        else 
            A_local_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_6_d0 <= bitcast_ln27_reg_1109;

    A_local_6_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_6_we0 <= ap_const_logic_1;
        else 
            A_local_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_7_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_7_ce0 <= ap_const_logic_1;
        else 
            A_local_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_7_d0 <= bitcast_ln27_reg_1109;

    A_local_7_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_7_we0 <= ap_const_logic_1;
        else 
            A_local_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_8_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_8_ce0 <= ap_const_logic_1;
        else 
            A_local_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_8_d0 <= bitcast_ln27_reg_1109;

    A_local_8_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_8) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_8_we0 <= ap_const_logic_1;
        else 
            A_local_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_9_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_9_ce0 <= ap_const_logic_1;
        else 
            A_local_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_9_d0 <= bitcast_ln27_reg_1109;

    A_local_9_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_9_we0 <= ap_const_logic_1;
        else 
            A_local_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_address0 <= zext_ln25_reg_1081_pp0_iter1_reg(4 - 1 downto 0);

    A_local_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_ce0 <= ap_const_logic_1;
        else 
            A_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_local_d0 <= bitcast_ln27_reg_1109;

    A_local_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln26_reg_1105_pp0_iter1_reg)
    begin
        if (((trunc_ln26_reg_1105_pp0_iter1_reg = ap_const_lv4_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            A_local_we0 <= ap_const_logic_1;
        else 
            A_local_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_10_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_10_ce0 <= ap_const_logic_1;
        else 
            B_local_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_10_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_10_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_A) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_10_we0 <= ap_const_logic_1;
        else 
            B_local_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_11_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_11_ce0 <= ap_const_logic_1;
        else 
            B_local_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_11_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_11_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_B) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_11_we0 <= ap_const_logic_1;
        else 
            B_local_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_12_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_12_ce0 <= ap_const_logic_1;
        else 
            B_local_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_12_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_12_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_12_we0 <= ap_const_logic_1;
        else 
            B_local_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_13_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_13_ce0 <= ap_const_logic_1;
        else 
            B_local_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_13_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_13_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_D) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_13_we0 <= ap_const_logic_1;
        else 
            B_local_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_14_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_14_ce0 <= ap_const_logic_1;
        else 
            B_local_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_14_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_14_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_E) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_14_we0 <= ap_const_logic_1;
        else 
            B_local_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_15_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_15_ce0 <= ap_const_logic_1;
        else 
            B_local_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_15_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_15_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_15_we0 <= ap_const_logic_1;
        else 
            B_local_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_1_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_1_ce0 <= ap_const_logic_1;
        else 
            B_local_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_1_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_1_we0 <= ap_const_logic_1;
        else 
            B_local_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_2_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_2_ce0 <= ap_const_logic_1;
        else 
            B_local_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_2_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_2_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_2_we0 <= ap_const_logic_1;
        else 
            B_local_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_3_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_3_ce0 <= ap_const_logic_1;
        else 
            B_local_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_3_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_3_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_3_we0 <= ap_const_logic_1;
        else 
            B_local_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_4_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_4_ce0 <= ap_const_logic_1;
        else 
            B_local_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_4_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_4_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_4_we0 <= ap_const_logic_1;
        else 
            B_local_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_5_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_5_ce0 <= ap_const_logic_1;
        else 
            B_local_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_5_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_5_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_5_we0 <= ap_const_logic_1;
        else 
            B_local_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_6_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_6_ce0 <= ap_const_logic_1;
        else 
            B_local_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_6_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_6_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_6_we0 <= ap_const_logic_1;
        else 
            B_local_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_7_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_7_ce0 <= ap_const_logic_1;
        else 
            B_local_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_7_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_7_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_7_we0 <= ap_const_logic_1;
        else 
            B_local_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_8_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_8_ce0 <= ap_const_logic_1;
        else 
            B_local_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_8_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_8_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_8) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_8_we0 <= ap_const_logic_1;
        else 
            B_local_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_9_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_9_ce0 <= ap_const_logic_1;
        else 
            B_local_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_9_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_9_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_9_we0 <= ap_const_logic_1;
        else 
            B_local_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_address0 <= j_cast_fu_1003_p1(4 - 1 downto 0);

    B_local_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_ce0 <= ap_const_logic_1;
        else 
            B_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B_local_d0 <= bitcast_ln28_fu_1022_p1;

    B_local_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, trunc_ln25_reg_1101_pp0_iter1_reg)
    begin
        if (((trunc_ln25_reg_1101_pp0_iter1_reg = ap_const_lv4_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_local_we0 <= ap_const_logic_1;
        else 
            B_local_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln25_1_fu_924_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv5_1));
    add_ln25_fu_898_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv9_1));
    add_ln26_fu_966_p2 <= std_logic_vector(unsigned(select_ln25_fu_916_p3) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_dataA_RVALID, icmp_ln25_reg_1072, m_axi_dataB_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln25_reg_1072 = ap_const_lv1_0) and (m_axi_dataA_RVALID = ap_const_logic_0)) or ((icmp_ln25_reg_1072 = ap_const_lv1_0) and (m_axi_dataB_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_dataA_RVALID, icmp_ln25_reg_1072, m_axi_dataB_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln25_reg_1072 = ap_const_lv1_0) and (m_axi_dataA_RVALID = ap_const_logic_0)) or ((icmp_ln25_reg_1072 = ap_const_lv1_0) and (m_axi_dataB_RVALID = ap_const_logic_0))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(m_axi_dataA_RVALID, icmp_ln25_reg_1072, m_axi_dataB_RVALID)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((icmp_ln25_reg_1072 = ap_const_lv1_0) and (m_axi_dataA_RVALID = ap_const_logic_0)) or ((icmp_ln25_reg_1072 = ap_const_lv1_0) and (m_axi_dataB_RVALID = ap_const_logic_0)));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln25_fu_892_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_892_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln25_reg_1072, ap_block_pp0_stage0_subdone)
    begin
        if (((icmp_ln25_reg_1072 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_196)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_196;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_200)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_200;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_192, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_192;
        end if; 
    end process;

    bitcast_ln27_fu_999_p1 <= m_axi_dataA_RDATA;
    bitcast_ln28_fu_1022_p1 <= dataB_addr_read_reg_1129;

    dataA_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_dataA_RVALID, icmp_ln25_reg_1072, ap_block_pp0_stage0)
    begin
        if (((icmp_ln25_reg_1072 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            dataA_blk_n_R <= m_axi_dataA_RVALID;
        else 
            dataA_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    dataB_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln25_reg_1072, m_axi_dataB_RVALID, ap_block_pp0_stage0)
    begin
        if (((icmp_ln25_reg_1072 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            dataB_blk_n_R <= m_axi_dataB_RVALID;
        else 
            dataB_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln25_fu_892_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv9_100) else "0";
    icmp_ln26_fu_910_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv5_10) else "0";
    j_cast_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln25_reg_1076_pp0_iter1_reg),64));
    m_axi_dataA_ARADDR <= ap_const_lv64_0;
    m_axi_dataA_ARBURST <= ap_const_lv2_0;
    m_axi_dataA_ARCACHE <= ap_const_lv4_0;
    m_axi_dataA_ARID <= ap_const_lv1_0;
    m_axi_dataA_ARLEN <= ap_const_lv32_0;
    m_axi_dataA_ARLOCK <= ap_const_lv2_0;
    m_axi_dataA_ARPROT <= ap_const_lv3_0;
    m_axi_dataA_ARQOS <= ap_const_lv4_0;
    m_axi_dataA_ARREGION <= ap_const_lv4_0;
    m_axi_dataA_ARSIZE <= ap_const_lv3_0;
    m_axi_dataA_ARUSER <= ap_const_lv1_0;
    m_axi_dataA_ARVALID <= ap_const_logic_0;
    m_axi_dataA_AWADDR <= ap_const_lv64_0;
    m_axi_dataA_AWBURST <= ap_const_lv2_0;
    m_axi_dataA_AWCACHE <= ap_const_lv4_0;
    m_axi_dataA_AWID <= ap_const_lv1_0;
    m_axi_dataA_AWLEN <= ap_const_lv32_0;
    m_axi_dataA_AWLOCK <= ap_const_lv2_0;
    m_axi_dataA_AWPROT <= ap_const_lv3_0;
    m_axi_dataA_AWQOS <= ap_const_lv4_0;
    m_axi_dataA_AWREGION <= ap_const_lv4_0;
    m_axi_dataA_AWSIZE <= ap_const_lv3_0;
    m_axi_dataA_AWUSER <= ap_const_lv1_0;
    m_axi_dataA_AWVALID <= ap_const_logic_0;
    m_axi_dataA_BREADY <= ap_const_logic_0;

    m_axi_dataA_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln25_reg_1072, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln25_reg_1072 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_dataA_RREADY <= ap_const_logic_1;
        else 
            m_axi_dataA_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_dataA_WDATA <= ap_const_lv32_0;
    m_axi_dataA_WID <= ap_const_lv1_0;
    m_axi_dataA_WLAST <= ap_const_logic_0;
    m_axi_dataA_WSTRB <= ap_const_lv4_0;
    m_axi_dataA_WUSER <= ap_const_lv1_0;
    m_axi_dataA_WVALID <= ap_const_logic_0;
    m_axi_dataB_ARADDR <= ap_const_lv64_0;
    m_axi_dataB_ARBURST <= ap_const_lv2_0;
    m_axi_dataB_ARCACHE <= ap_const_lv4_0;
    m_axi_dataB_ARID <= ap_const_lv1_0;
    m_axi_dataB_ARLEN <= ap_const_lv32_0;
    m_axi_dataB_ARLOCK <= ap_const_lv2_0;
    m_axi_dataB_ARPROT <= ap_const_lv3_0;
    m_axi_dataB_ARQOS <= ap_const_lv4_0;
    m_axi_dataB_ARREGION <= ap_const_lv4_0;
    m_axi_dataB_ARSIZE <= ap_const_lv3_0;
    m_axi_dataB_ARUSER <= ap_const_lv1_0;
    m_axi_dataB_ARVALID <= ap_const_logic_0;
    m_axi_dataB_AWADDR <= ap_const_lv64_0;
    m_axi_dataB_AWBURST <= ap_const_lv2_0;
    m_axi_dataB_AWCACHE <= ap_const_lv4_0;
    m_axi_dataB_AWID <= ap_const_lv1_0;
    m_axi_dataB_AWLEN <= ap_const_lv32_0;
    m_axi_dataB_AWLOCK <= ap_const_lv2_0;
    m_axi_dataB_AWPROT <= ap_const_lv3_0;
    m_axi_dataB_AWQOS <= ap_const_lv4_0;
    m_axi_dataB_AWREGION <= ap_const_lv4_0;
    m_axi_dataB_AWSIZE <= ap_const_lv3_0;
    m_axi_dataB_AWUSER <= ap_const_lv1_0;
    m_axi_dataB_AWVALID <= ap_const_logic_0;
    m_axi_dataB_BREADY <= ap_const_logic_0;

    m_axi_dataB_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln25_reg_1072, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln25_reg_1072 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_dataB_RREADY <= ap_const_logic_1;
        else 
            m_axi_dataB_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_dataB_WDATA <= ap_const_lv32_0;
    m_axi_dataB_WID <= ap_const_lv1_0;
    m_axi_dataB_WLAST <= ap_const_logic_0;
    m_axi_dataB_WSTRB <= ap_const_lv4_0;
    m_axi_dataB_WUSER <= ap_const_lv1_0;
    m_axi_dataB_WVALID <= ap_const_logic_0;
    select_ln25_1_fu_930_p3 <= 
        add_ln25_1_fu_924_p2 when (icmp_ln26_fu_910_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln25_fu_916_p3 <= 
        ap_const_lv5_0 when (icmp_ln26_fu_910_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    trunc_ln25_fu_958_p1 <= select_ln25_1_fu_930_p3(4 - 1 downto 0);
    trunc_ln26_fu_962_p1 <= select_ln25_fu_916_p3(4 - 1 downto 0);
    zext_ln25_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln25_1_fu_930_p3),64));
end behav;
